{"version":3,"sources":["views/Settings/components/ProfileExample.js","views/Settings/components/General.js","views/Settings/components/Access.js","views/Settings/Settings.js","store/actions/userActions.js"],"names":["useStyles","makeStyles","theme","root","cover","position","height","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","width","backgroundImage","addPhotoIcon","marginRight","spacing","container","breakpoints","values","lg","maxWidth","padding","margin","display","flexWrap","down","flexDirection","avatar","border","palette","white","avatarSmall","details","marginLeft","flex","detailsSmall","actionButtons","moreIcon","pendingButton","color","backgroundColor","colors","red","personAddIcon","mailIcon","ProfileExample","props","className","rest","classes","dispatch","useDispatch","authUser","useSelector","state","auth","useEffect","getProfileById","_id","currentUser","userById","clsx","style","coverPicture","Hidden","smDown","Avatar","alt","src","profilePicture","Typography","component","variant","bio","name","from","city","mdUp","secondary","main","form","profileExample","marginTop","submit","textField","acceptNewProfile","password","General","id","useState","showPassword","pass","setPass","userId","email","isAdmin","role","age","user","setUser","Grid","item","xs","sm","md","align","noValidate","onSubmit","e","preventDefault","updateUser","signIn","TextField","autoFocus","autoComplete","value","onChange","target","helperText","InputProps","startAdornment","InputAdornment","label","multiline","rows","select","fullwidth","map","option","MenuItem","type","defaultValue","Date","now","InputLabelProps","shrink","FormControl","InputLabel","htmlFor","Input","prop","event","endAdornment","IconButton","onClick","onMouseDown","FormHelperText","Button","fullWidth","image","grey","paper","alignItems","marginBottom","Access","inner","divider","tabs","innerContent","Settings","match","history","tab","params","appState","console","log","push","find","t","Page","title","Tabs","scrollButtons","Tab","Divider","to","axios","get","url","setHeaders","then","catch","error","response","toast","data","POSITION","BOTTOM_RIGHT","unfollowUser","authedUser","onSuccess","onError","a","success","payload","put","followUser","updatedUser"],"mappings":"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","file":"static/js/11.d24a91bf.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Avatar,\r\n    Typography,\r\n    Button,\r\n    Hidden,\r\n    colors\r\n} from '@material-ui/core';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ChatIcon from '@material-ui/icons/ChatOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfileById} from \"../../../store/actions/userActions\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    cover: {\r\n        position: 'relative',\r\n        height: 320,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        '&:before': {\r\n            position: 'absolute',\r\n            content: '\" \"',\r\n            top: 0,\r\n            left: 0,\r\n            height: '100%',\r\n            width: '100%',\r\n            backgroundImage:\r\n                'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\r\n        },\r\n    },\r\n    addPhotoIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    container: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        padding: theme.spacing(2, 3),\r\n        margin: '0 auto',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column'\r\n        }\r\n    },\r\n    avatar: {\r\n        border: `2px solid ${theme.palette.white}`,\r\n        height: 130,\r\n        width: 130,\r\n        top: -60,\r\n        left: theme.spacing(3),\r\n        position: 'absolute'\r\n    },\r\n    avatarSmall: {\r\n        border: `2px solid ${theme.palette.white}`,\r\n        height: 100,\r\n        width: 100,\r\n        top: -60,\r\n        left: theme.spacing(3),\r\n        position: 'absolute'\r\n    },\r\n    details: {\r\n        marginLeft: 150,\r\n        flex: \"auto\"\r\n    },\r\n    detailsSmall: {\r\n        marginLeft: 100,\r\n        flex: \"auto\"\r\n    },\r\n    actionButtons: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    moreIcon: {\r\n        flex: \"auto\"\r\n    },\r\n    pendingButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: colors.red[600],\r\n        '&:hover': {\r\n            backgroundColor: colors.red[900]\r\n        }\r\n    },\r\n    personAddIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    mailIcon: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nconst ProfileExample = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const authUser = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileById(authUser._id))\r\n    }, [authUser._id, dispatch])\r\n\r\n    const currentUser = useSelector(state => state.userById)\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <div\r\n                className={classes.cover}\r\n                style={{backgroundImage: `url(${currentUser.coverPicture})`}}\r\n            />\r\n            <Hidden smDown>\r\n                <div className={classes.container}>\r\n                    <Avatar\r\n                        alt=\"Person\"\r\n                        className={classes.avatar}\r\n                        src={currentUser.profilePicture}\r\n                    />\r\n                    <div className={classes.details}>\r\n                        <Typography\r\n                            component=\"h2\"\r\n                            variant=\"overline\"\r\n                        >\r\n                            {currentUser.bio}\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h2\"\r\n                        >\r\n                            {currentUser.name}\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"h2\"\r\n                            variant=\"body1\"\r\n                        >\r\n                            {currentUser.from}, {currentUser.city}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n                <div className={classes.container}>\r\n                    <Avatar\r\n                        alt=\"Person\"\r\n                        className={classes.avatarSmall}\r\n                        src={currentUser.profilePicture}\r\n                    />\r\n                    <div className={classes.detailsSmall}>\r\n                        <Typography\r\n                            component=\"h2\"\r\n                            variant=\"overline\"\r\n                        >\r\n                            {currentUser.bio}\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h2\"\r\n                        >\r\n                            {currentUser.name}\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"h2\"\r\n                            variant=\"body1\"\r\n                        >\r\n                            {currentUser.from}, {currentUser.city}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </Hidden>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileExample;\r\n","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn, signUp} from \"../../../store/actions/authActions\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Divider, Hidden, MenuItem, Paper} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PanoramaIcon from \"@material-ui/icons/Panorama\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ProfileExample from \"./ProfileExample\";\r\nimport {updateUser} from \"../../../store/actions/userActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '82%',\r\n        margin: theme.spacing(1, '9%', 5),\r\n    },\r\n    profileExample: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, '25%', 3),\r\n        width: '50%',\r\n    },\r\n    textField: {\r\n        width: '100%'\r\n    },\r\n    acceptNewProfile: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    password: {}\r\n}));\r\n\r\n\r\nconst General = props => {\r\n    const {id, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const authUser = useSelector(state => state.auth)\r\n\r\n    const [pass, setPass] = useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setPass({...pass, [prop]: event.target.value});\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setPass({...pass, showPassword: !pass.showPassword});\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const isAdminCurrencies = [\r\n        {\r\n            value: 'true',\r\n            label: 'Да',\r\n        },\r\n        {\r\n            value: 'false',\r\n            label: 'Нет',\r\n        },\r\n    ];\r\n\r\n    const roleCurrencies = [\r\n        {\r\n            value: '1',\r\n            label: 'не указано',\r\n        },\r\n        {\r\n            value: '2',\r\n            label: 'Тренер',\r\n        },\r\n        {\r\n            value: '3',\r\n            label: 'Пользователь',\r\n        },\r\n    ];\r\n\r\n    const [user, setUser] = useState({\r\n        userId: authUser._id,\r\n        name: authUser.name,\r\n        email: authUser.email,\r\n        password: authUser.password,\r\n        bio: authUser.bio,\r\n        profilePicture: authUser.profilePicture,\r\n        coverPicture: authUser.coverPicture,\r\n        isAdmin: authUser.isAdmin,\r\n        city: authUser.city,\r\n        from: authUser.from,\r\n        role: authUser.role,\r\n        age: authUser.age\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser(user, authUser._id));\r\n        dispatch(signIn(user.email, user.password))\r\n        // setUser({\r\n        //     userId: \"\",\r\n        //     name: \"\",\r\n        //     email: \"\",\r\n        //     password: \"\",\r\n        //     bio: \"\",\r\n        //     profilePicture: \"\",\r\n        //     coverPicture: \"\",\r\n        //     isAdmin: \"\",\r\n        //     city: \"\",\r\n        //     from: \"\",\r\n        //     role: \"\",\r\n        //     age: \"\"\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            {...rest}\r\n            container\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Grid item xs={12} sm={5} md={7} className={classes.profileExample}>\r\n                <ProfileExample />\r\n                <Typography variant=\"subtitle1\" align={\"center\"}>\r\n                    Чтобы изменить информацию в профиле, введите \"пароль\" и нажмите сохранить.\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} md={5}>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        id=\"name\"\r\n                        autoFocus\r\n                        autoComplete=\"name\"\r\n                        value={user.name}\r\n                        onChange={(e) => setUser({...user, name: e.target.value})}\r\n                        helperText=\"Имя: от 3 до 30 символов\"\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">\r\n                                <AccountCircleIcon/>\r\n                            </InputAdornment>,\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        label=\"Био...\"\r\n                        id=\"bio\"\r\n                        multiline\r\n                        rows={4}\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">\r\n                                <FingerprintIcon/>\r\n                            </InputAdornment>,\r\n                        }}\r\n                        autoFocus\r\n                        value={user.bio}\r\n                        onChange={(e) => setUser({\r\n                            ...user, bio: e.target.value\r\n                        })\r\n                        }\r\n                        variant=\"filled\"\r\n                        helperText=\"До 50 символов\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Аватарка\"\r\n                        id=\"profilePicture\"\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">\r\n                                <FaceIcon/>\r\n                            </InputAdornment>,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        helperText=\"Пока что ссылка на фотку\"\r\n                        autoFocus\r\n                        value={user.profilePicture}\r\n                        onChange={(e) => setUser({\r\n                            ...user, profilePicture: e.target.value\r\n                        })\r\n                        }\r\n                    />\r\n                    <TextField\r\n                        label=\"Кавер профиля\"\r\n                        id=\"coverPicture\"\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">\r\n                                <PanoramaIcon/>\r\n                            </InputAdornment>,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        helperText=\"Тоже ссылочка\"\r\n                        autoFocus\r\n                        value={user.coverPicture}\r\n                        onChange={(e) => setUser({\r\n                            ...user, coverPicture: e.target.value\r\n                        })\r\n                        }\r\n                    />\r\n                    <Grid container>\r\n                        <Grid xs={12} sm={4} spacing={2}>\r\n                            <TextField\r\n                                id=\"isAdmin\"\r\n                                select\r\n                                label=\"Админ?\"\r\n                                className={clsx(classes.margin, classes.textField)}\r\n                                helperText=\"Нет!)\"\r\n                                fullwidth\r\n                                value={user.isAdmin}\r\n                                onChange={(e) => setUser({\r\n                                    ...user, isAdmin: e.target.value\r\n                                })\r\n                                }\r\n                            >\r\n                                {isAdminCurrencies.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={4} spacing={2}>\r\n                            <TextField\r\n                                id=\"role\"\r\n                                select\r\n                                label=\"Ваша роль?\"\r\n                                className={clsx(classes.margin, classes.textField)}\r\n                                helperText=\"один из трех...\"\r\n                                fullwidth\r\n                                value={user.role}\r\n                                onChange={(e) => setUser({\r\n                                    ...user, role: e.target.value\r\n                                })\r\n                                }\r\n                            >\r\n                                {roleCurrencies.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={4} spacing={2}>\r\n                            <TextField\r\n                                id=\"age\"\r\n                                label=\"Дата рождения\"\r\n                                type=\"date\"\r\n                                className={clsx(classes.margin, classes.textField)}\r\n                                defaultValue={Date.now()}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                value={user.age}\r\n                                onChange={(e) => setUser({\r\n                                    ...user, age: e.target.value\r\n                                })\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6} spacing={2}>\r\n                            <TextField\r\n                                id=\"city\"\r\n                                label=\"Город?\"\r\n                                className={clsx(classes.margin, classes.textField)}\r\n                                helperText=\"До 30 символов\"\r\n                                fullwidth\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">\r\n                                        <HomeIcon/>\r\n                                    </InputAdornment>,\r\n                                }}\r\n                                value={user.city}\r\n                                onChange={(e) => setUser({\r\n                                    ...user, city: e.target.value\r\n                                })\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6} spacing={2}>\r\n                            <TextField\r\n                                id=\"from\"\r\n                                label=\"Страна?\"\r\n                                className={clsx(classes.margin, classes.textField)}\r\n                                helperText=\"До 30 символов\"\r\n                                fullwidth\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">\r\n                                        <PublicIcon/>\r\n                                    </InputAdornment>,\r\n                                }}\r\n                                value={user.from}\r\n                                onChange={(e) => setUser({\r\n                                    ...user, from: e.target.value\r\n                                })\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container className={classes.acceptNewProfile}>\r\n                        <TextField\r\n                            id=\"email\"\r\n                            helperText=\"Email: от 3 до 200 символов\"\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            autoFocus\r\n                            autoComplete=\"email\"\r\n                            value={user.email}\r\n                            onChange={(e) => setUser({...user, email: e.target.value})}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">\r\n                                    <EmailIcon/>\r\n                                </InputAdornment>,\r\n                            }}\r\n                        />\r\n                        <FormControl className={clsx(classes.margin, classes.textField, classes.password)}>\r\n                            <InputLabel htmlFor=\"password\">Пароль</InputLabel>\r\n                            <Input\r\n                                id=\"password\"\r\n                                type={pass.showPassword ? 'text' : 'password'}\r\n                                autoFocus\r\n                                autoComplete=\"username\"\r\n                                value={user.password}\r\n                                onChange={(e) => setUser({\r\n                                        ...user, password: e.target.value\r\n                                    })\r\n                                    && handleChange('password')\r\n                                }\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {pass.showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                            <FormHelperText id=\"helperText\">от 6 до 200 символов</FormHelperText>\r\n                        </FormControl>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default General;","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2, 2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '82%',\r\n        margin: theme.spacing(5, '9%', 5),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, '25%', 2),\r\n        width: '50%',\r\n    },\r\n    textField: {\r\n        width: '100%'\r\n    },\r\n    margin: {\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nconst Access = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <form className={classes.form}>\r\n                <Grid container>\r\n                    Access\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Access;","import React, {useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Tabs, Tab, Divider, colors } from '@material-ui/core';\r\n\r\nimport Page from \"../../components/Page\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfileById} from \"../../store/actions/userActions\";\r\nimport {General, Access} from \"./components\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    inner: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n    },\r\n    divider: {\r\n        backgroundColor: colors.grey[400]\r\n    },\r\n    tabs: {},\r\n    content: {\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n        marginBottom: theme.spacing(6)\r\n    },\r\n    innerContent: {\r\n\r\n    }\r\n}));\r\n\r\nconst Settings = props => {\r\n    const {match, history} = props;\r\n    const classes = useStyles();\r\n    const {tab} = match.params;\r\n\r\n    const id = useSelector(state => state.auth._id)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileById(id));\r\n    }, [id])\r\n\r\n    const handleTabsChange = (event, value) => {\r\n        history.push(value);\r\n    };\r\n\r\n    const appState = useSelector((state) => state);\r\n    console.log(appState);\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    if (!auth._id) (\r\n        history.push('/')\r\n    )\r\n\r\n    const tabs = [\r\n        {value: 'general', label: 'Редактировать профиль'},\r\n        {value: 'access', label: 'Приватность'},\r\n    ];\r\n\r\n    if (!tabs.find(t => t.value === tab)) {\r\n        return <Redirect to=\"/errors/error-404\"/>;\r\n    }\r\n\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Settings\"\r\n        >\r\n            <div className={classes.inner}>\r\n                <Tabs\r\n                    className={classes.tabs}\r\n                    onChange={handleTabsChange}\r\n                    scrollButtons=\"auto\"\r\n                    value={tab}\r\n                    variant=\"scrollable\"\r\n                >\r\n                    {tabs.map(tab => (\r\n                        <Tab\r\n                            key={tab.value}\r\n                            label={tab.label}\r\n                            value={tab.value}\r\n                        />\r\n                    ))}\r\n                </Tabs>\r\n                <Divider className={classes.divider}/>\r\n                <div className={classes.content}>\r\n                    <div className={classes.innerContent}>\r\n                    {tab === 'general' && <General id={id}/>}\r\n                    {tab === 'access' && <Access/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n\r\n\r\nexport default Settings;\r\n","import axios from \"axios\";\r\nimport {setHeaders, url} from \"../../api\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const getProfileById = (id) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .get(`${url}/users/${id}`, setHeaders())\r\n            .then((userById) => {\r\n\r\n                dispatch({\r\n                    type: \"GET_USER_BY_ID\",\r\n                    userById\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport function unfollowUser(authedUser, currentUser) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({type: \"UNFOLLOW_USER\", payload: success});\r\n            return success;\r\n        }\r\n\r\n        function onError(error) {\r\n            console.log(error.response);\r\n\r\n            toast.error(error.response?.data, {\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n        }\r\n\r\n        try {\r\n            const success = await axios.put(`${url}/users/${currentUser}/unfollow`,\r\n                {userId: authedUser}, setHeaders());\r\n            return onSuccess(success);\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport function followUser(authedUser, currentUser) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({type: \"FOLLOW_USER\", payload: success});\r\n            return success;\r\n        }\r\n\r\n        function onError(error) {\r\n            console.log(error.response);\r\n\r\n            toast.error(error.response?.data, {\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n        }\r\n\r\n        try {\r\n            const success = await axios.put(`${url}/users/${currentUser}/follow`,\r\n                {userId: authedUser}, setHeaders());\r\n            return onSuccess(success);\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateUser = (updatedUser, id) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .put(`${url}/users/${id}`, updatedUser, setHeaders())\r\n            .then((user) => {\r\n                dispatch({\r\n                    type: \"UPDATE_USER\",\r\n                    user: user.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};"],"sourceRoot":""}