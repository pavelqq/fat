{"version":3,"sources":["views/Register/Register.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","textField","marginBottom","Register","props","className","rest","classes","useState","password","showPassword","pass","setPass","auth","useSelector","state","dispatch","useDispatch","name","email","bio","profilePicture","coverPicture","isAdmin","city","from","role","age","user","setUser","_id","history","push","Grid","container","clsx","CssBaseline","item","xs","sm","md","component","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","signUp","TextField","label","id","required","autoFocus","autoComplete","value","onChange","target","helperText","InputProps","startAdornment","InputAdornment","position","FormControl","InputLabel","htmlFor","Input","prop","event","endAdornment","IconButton","onClick","onMouseDown","FormHelperText","multiline","rows","select","fullwidth","map","option","MenuItem","defaultValue","now","InputLabelProps","shrink","Button","fullWidth","disabled","justify","Box","mt"],"mappings":"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","file":"static/js/23.db6fe897.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signUp} from \"../../store/actions/authActions\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport PanoramaIcon from '@material-ui/icons/Panorama';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport {MenuItem, Paper} from '@material-ui/core'\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Копирайт © '}\r\n            <Link color=\"inherit\" href=\"http://localhost:3000/\">\r\n                Фэт\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2, 2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    textField: {\r\n        width: '100%'\r\n    },\r\n    margin: {\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nconst Register = props => {\r\n\r\n    const {className, ...rest} = props;\r\n    const classes = useStyles();\r\n\r\n    const [pass, setPass] = useState({\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setPass({...pass, [prop]: event.target.value});\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setPass({...pass, showPassword: !pass.showPassword});\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleForgotPassword = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const isAdminCurrencies = [\r\n        {\r\n            value: 'true',\r\n            label: 'Да',\r\n        },\r\n        {\r\n            value: 'false',\r\n            label: 'Нет',\r\n        },\r\n    ];\r\n\r\n    const roleCurrencies = [\r\n        {\r\n            value: '1',\r\n            label: 'не указано',\r\n        },\r\n        {\r\n            value: '2',\r\n            label: 'Тренер',\r\n        },\r\n        {\r\n            value: '3',\r\n            label: 'Пользователь',\r\n        },\r\n    ];\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        bio: \"\",\r\n        profilePicture: \"\",\r\n        coverPicture: \"\",\r\n        isAdmin: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        role: \"\",\r\n        age: \"\"\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signUp(user));\r\n        setUser({\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            bio: \"\",\r\n            profilePicture: \"\",\r\n            coverPicture: \"\",\r\n            isAdmin: \"\",\r\n            city: \"\",\r\n            from: \"\",\r\n            role: \"\",\r\n            age: \"\"\r\n        });\r\n    };\r\n\r\n    if (auth._id) return props.history.push(`/profile/${auth._id}/wall`);\r\n\r\n    return (\r\n        <Grid\r\n            {...rest}\r\n            container\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CssBaseline/>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Регистрация\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Обязательно заполни:\r\n                        </Typography>\r\n                        <TextField\r\n                            label=\"Имя\"\r\n                            id=\"name\"\r\n                            required\r\n                            autoFocus\r\n                            autoComplete=\"name\"\r\n                            value={user.name}\r\n                            onChange={(e) => setUser({ ...user, name: e.target.value })}\r\n                            helperText=\"от 3 до 30 символов\"\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">\r\n                                    <AccountCircleIcon/>\r\n                                </InputAdornment>,\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            label=\"Почта\"\r\n                            id=\"email\"\r\n                            helperText=\"от 3 до 200 символов\"\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            required\r\n                            autoFocus\r\n                            autoComplete=\"email\"\r\n                            value={user.email}\r\n                            onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">\r\n                                    <EmailIcon/>\r\n                                </InputAdornment>,\r\n                            }}\r\n                        />\r\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\r\n                            <InputLabel htmlFor=\"password\">Пароль</InputLabel>\r\n                            <Input\r\n                                id=\"password\"\r\n                                type={pass.showPassword ? 'text' : 'password'}\r\n                                required\r\n                                autoFocus\r\n                                autoComplete=\"username\"\r\n                                value={user.password}\r\n                                onChange={(e) => setUser({\r\n                                    ...user, password: e.target.value })\r\n                                    && handleChange('password')\r\n                                }\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {pass.showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                            <FormHelperText id=\"helperText\">от 6 до 200 символов</FormHelperText>\r\n                        </FormControl>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Можно заполнить позже:\r\n                        </Typography>\r\n                        <TextField\r\n                            label=\"Био...\"\r\n                            id=\"bio\"\r\n                            multiline\r\n                            rows={4}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">\r\n                                    <FingerprintIcon/>\r\n                                </InputAdornment>,\r\n                            }}\r\n                            autoFocus\r\n                            value={user.bio}\r\n                            onChange={(e) => setUser({\r\n                                ...user, bio: e.target.value })\r\n                            }\r\n                            variant=\"filled\"\r\n                            helperText=\"До 50 символов\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Аватарка\"\r\n                            id=\"profilePicture\"\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">\r\n                                    <FaceIcon/>\r\n                                </InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            helperText=\"Пока что ссылка на фотку\"\r\n                            autoFocus\r\n                            value={user.profilePicture}\r\n                            onChange={(e) => setUser({\r\n                                    ...user, profilePicture: e.target.value })\r\n                            }\r\n                        />\r\n                        <TextField\r\n                            label=\"Кавер профиля\"\r\n                            id=\"coverPicture\"\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">\r\n                                    <PanoramaIcon/>\r\n                                </InputAdornment>,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            helperText=\"Тоже ссылочка\"\r\n                            autoFocus\r\n                            value={user.coverPicture}\r\n                            onChange={(e) => setUser({\r\n                                ...user, coverPicture: e.target.value })\r\n                            }\r\n                        />\r\n                        <Grid container>\r\n                            <Grid xs={12} sm={4} spacing={2}>\r\n                                <TextField\r\n                                    id=\"isAdmin\"\r\n                                    select\r\n                                    label=\"Админ?\"\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    helperText=\"Нет!)\"\r\n                                    fullwidth\r\n                                    value={user.isAdmin}\r\n                                    onChange={(e) => setUser({\r\n                                        ...user, isAdmin: e.target.value })\r\n                                    }\r\n                                >\r\n                                    {isAdminCurrencies.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid xs={12} sm={4} spacing={2}>\r\n                                <TextField\r\n                                    id=\"role\"\r\n                                    select\r\n                                    label=\"Ваша роль?\"\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    helperText=\"один из трех...\"\r\n                                    fullwidth\r\n                                    value={user.role}\r\n                                    onChange={(e) => setUser({\r\n                                        ...user, role: e.target.value })\r\n                                    }\r\n                                >\r\n                                    {roleCurrencies.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid xs={12} sm={4} spacing={2}>\r\n                                <TextField\r\n                                    id=\"age\"\r\n                                    label=\"Дата рождения\"\r\n                                    type=\"date\"\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    defaultValue={Date.now()}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    value={user.age}\r\n                                    onChange={(e) => setUser({\r\n                                        ...user, age: e.target.value })\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid xs={12} sm={6} spacing={2}>\r\n                                <TextField\r\n                                    id=\"city\"\r\n                                    label=\"Город?\"\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    helperText=\"До 30 символов\"\r\n                                    fullwidth\r\n                                    InputProps={{\r\n                                        startAdornment: <InputAdornment position=\"start\">\r\n                                            <HomeIcon/>\r\n                                        </InputAdornment>,\r\n                                    }}\r\n                                    value={user.city}\r\n                                    onChange={(e) => setUser({\r\n                                        ...user, city: e.target.value })\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid xs={12} sm={6} spacing={2}>\r\n                                <TextField\r\n                                    id=\"from\"\r\n                                    label=\"Страна?\"\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    helperText=\"До 30 символов\"\r\n                                    fullwidth\r\n                                    InputProps={{\r\n                                        startAdornment: <InputAdornment position=\"start\">\r\n                                            <PublicIcon/>\r\n                                        </InputAdornment>,\r\n                                    }}\r\n                                    value={user.from}\r\n                                    onChange={(e) => setUser({\r\n                                        ...user, from: e.target.value })\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"subtitle1\" onClick={handleForgotPassword} disabled>\r\n                                    Забыли пароль?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link href=\"/auth/login\" variant=\"subtitle1\">\r\n                                        Уже есть аккаунт? Авторизуйтесь\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box mt={5}>\r\n                            <Copyright/>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Register;"],"sourceRoot":""}