{"version":3,"sources":["components/AddPost/AddPost.js","views/Profile/components/Gallery/Gallery.js","components/RichEditor/components/EditorToolbar/EditorToolbar.js","components/RichEditor/utils/block.js","components/PostCard/components/CommentBubble/CommentBubble.js","components/PostCard/components/CommentForm/CommentForm.js","components/PostCard/components/Reactions/Reactions.js","components/PostCard/components/OptionsPopover.js","components/PostCard/PostCard.js","views/Profile/components/TimelinePosts/TimelinePosts.js","views/Profile/components/TimelinePosts/Timeline.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","content","breakpoints","up","display","sendButton","width","paper","flexGrow","padding","divider","height","fileInput","editorContainer","minHeight","typography","body2","body1","h1","h2","h3","h4","h5","h6","subtitle1","marginLeft","backgroundColor","fontFamily","fontSize","textAlignLeft","textAlign","textAlignCenter","textAlignRight","textAlignJustify","AddPost","props","post","setPost","currentUserName","className","rest","classes","dispatch","useDispatch","editorRef","useRef","useState","EditorState","createEmpty","editorState","setEditorState","handleEditorChange","description","JSON","stringify","convertToRaw","getCurrentContent","Card","clsx","noValidate","autoComplete","onSubmit","e","preventDefault","_id","id","updatedPost","profilePicture","author","date","uid","updatePost","newPost","Date","addPost","Paper","elevation","onToggle","type","value","includes","newContentState","Modifier","setBlockData","getSelection","newEditorState","push","RichUtils","toggleBlockType","toggleInlineStyle","Divider","onClick","current","focus","blockRenderMap","blockStyleFn","contentBlock","string","getData","get","charAt","toUpperCase","slice","handleKeyCommand","command","newState","keyBindingFn","event","keyCode","getDefaultKeyBinding","onTab","onChange","placeholder","ref","spellCheck","Tooltip","title","IconButton","color","length","gallery","maxWidth","useStyles1","inner","alignItems","useStyles2","button","minWidth","palette","icon","activeButton","fade","primary","main","BLOCK_TYPES","blockType","tooltip","text","FormatQuoteIcon","FormatListBulletedIcon","FormatListNumberedIcon","CodeIcon","INLINE_STYLES","inlineStyle","FormatBoldIcon","FormatItalicIcon","FormatUnderlined","ButtonBase","active","children","Button","BlockTypeButtons","selection","getBlockForKey","getStartKey","getType","blockData","map","handleClick","InlineStyleButtons","currentStyle","getCurrentInlineStyle","has","EditorToolbar","newBlockRenderMap","Map","unstyled","element","paragraph","DefaultDraftBlockRenderMap","merge","marginBottom","bubble","borderRadius","shape","background","default","header","time","message","input","CommentForm","fileInputRef","setValue","handleAttach","click","Avatar","alt","src","Input","disableUnderline","persist","target","edge","likeButton","likedButton","colors","red","shareButton","shareIcon","marginRight","actions","grey","justifyContent","NotificationsPopover","posts","anchorEl","closedOptions","handleCloseOptions","authedUser","useSelector","state","auth","currentUser","userById","Popover","anchorOrigin","vertical","horizontal","List","ListItem","foundPost","find","window","scrollTo","top","left","behavior","toast","info","position","POSITION","BOTTOM_RIGHT","handleOnUpdateClick","ListItemIcon","ListItemText","deletePost","subheader","accessTimeIcon","secondary","paddingTop","editorField","mediaArea","media","backgroundPosition","expand","transform","transition","transitions","create","duration","shortest","expandOpen","actionsGroup","PostCard","scrollRef","expanded","setExpanded","authUserId","likes","like","setLike","some","userId","isLiked","setIsLiked","likeHandler","likeDislikePost","err","setOpenOptions","optionsRef","OptionsPopover","onClose","open","CardHeader","avatar","component","RouterLink","to","action","disableTypography","Typography","variant","moment","fromNow","Link","CardContent","createWithContent","convertFromRaw","parse","readOnly","size","Collapse","in","timeout","unmountOnExit","timelineItem"],"mappings":"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","file":"static/js/4.f16c5826.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, Card, CardContent, Divider, Hidden, IconButton, Paper, Tooltip, Typography} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\n//import {sendPost} from \"../../redux/actions/profilePosts\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addPost, updatePost} from \"../../store/actions/postActions\";\r\nimport {EditorToolbar} from \"../RichEditor/components\";\r\nimport {convertFromRaw, convertToRaw, Editor, EditorState, getDefaultKeyBinding, Modifier, RichUtils} from \"draft-js\";\r\nimport {blockRenderMap} from \"../RichEditor/utils\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    content: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n        alignItems: 'center'\r\n    },\r\n    sendButton: {\r\n        width: '130',\r\n    },\r\n    paper: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(0.5, 1)\r\n    },\r\n    // input: {\r\n    //     width: '100%'\r\n    // },\r\n    divider: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 1,\r\n            height: 24\r\n        },\r\n    },\r\n    fileInput: {\r\n        display: 'none'\r\n    },\r\n    editorContainer: {\r\n        padding: theme.spacing(1),\r\n        minHeight: 60,\r\n        '& .public-DraftEditorPlaceholder-root': {\r\n            ...theme.typography.body2\r\n        },\r\n        '& .public-DraftEditorPlaceholder-hasFocus': {\r\n            display: 'none'\r\n        },\r\n        '& .public-DraftEditor-content': {\r\n            '& p': {\r\n                ...theme.typography.body1\r\n            },\r\n            '& h1': {\r\n                ...theme.typography.h1\r\n            },\r\n            '& h2': {\r\n                ...theme.typography.h2\r\n            },\r\n            '& h3': {\r\n                ...theme.typography.h3\r\n            },\r\n            '& h4': {\r\n                ...theme.typography.h4\r\n            },\r\n            '& h5': {\r\n                ...theme.typography.h5\r\n            },\r\n            '& h6': {\r\n                ...theme.typography.h6\r\n            },\r\n            '& blockquote': {\r\n                ...theme.typography.subtitle1\r\n            },\r\n            '& ul': {\r\n                ...theme.typography.body1,\r\n                marginLeft: theme.spacing(4)\r\n            },\r\n            '& ol': {\r\n                ...theme.typography.body1,\r\n                marginLeft: theme.spacing(4)\r\n            },\r\n            '& pre': {\r\n                backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n                fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n                fontSize: 16,\r\n                padding: 2\r\n            }\r\n        }\r\n    },\r\n    textAlignLeft: {\r\n        textAlign: 'left'\r\n    },\r\n    textAlignCenter: {\r\n        textAlign: 'center'\r\n    },\r\n    textAlignRight: {\r\n        textAlign: 'right'\r\n    },\r\n    textAlignJustify: {\r\n        textAlign: 'justify'\r\n    }\r\n}));\r\n\r\nconst AddPost = props => {\r\n    const {post, setPost, currentUserName, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (post._id) {\r\n            const id = post._id;\r\n            const updatedPost = {\r\n                //description: post.description,\r\n                description: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\r\n                profilePicture: post.profilePicture,\r\n                author: post.author,\r\n                date: post.date,\r\n                uid: post.uid\r\n            }\r\n\r\n            dispatch(updatePost(updatedPost, id));\r\n\r\n        } else {\r\n            const newPost = {\r\n                ...post,\r\n                //description: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\r\n                date: new Date()\r\n            }\r\n\r\n            dispatch(addPost(newPost));\r\n        }\r\n        setPost({description: EditorState.createEmpty()});\r\n    }\r\n\r\n    const capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\r\n\r\n    const editorRef = useRef(null);\r\n\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n    const handleContainerClick = () => {\r\n        editorRef.current.focus();\r\n    };\r\n\r\n    const handleToolbarToggle = (type, value) => {\r\n        if (type === 'blockType') {\r\n            if (['left', 'center', 'right', 'justify'].includes(value)) {\r\n                const newContentState = Modifier.setBlockData(\r\n                    editorState.getCurrentContent(),\r\n                    editorState.getSelection(),\r\n                    {'text-align': value}\r\n                );\r\n                const newEditorState = EditorState.push(\r\n                    editorState,\r\n                    newContentState,\r\n                    'change-block-data'\r\n                );\r\n                setEditorState(newEditorState);\r\n                return;\r\n            }\r\n            setEditorState(RichUtils.toggleBlockType(editorState, value));\r\n        } else {\r\n            setEditorState(RichUtils.toggleInlineStyle(editorState, value));\r\n        }\r\n    };\r\n\r\n    const handleEditorChange = editorState => {\r\n        setEditorState(editorState);\r\n        setPost({...post, description: JSON.stringify(convertToRaw(editorState.getCurrentContent()))})\r\n    };\r\n\r\n    const handleKeyCommand = (command, editorState) => {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            handleEditorChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const mapKeyToEditorCommand = event => {\r\n        if (event.keyCode === 9) {\r\n            const newEditorState = RichUtils.onTab(event, editorState, 4);\r\n            if (newEditorState !== editorState) {\r\n                handleEditorChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(event);\r\n    };\r\n\r\n    function blockStyleFn(contentBlock) {\r\n        const textAlign = contentBlock.getData().get('text-align');\r\n        if (textAlign) {\r\n            const className = `textAlign${capitalize(textAlign)}`;\r\n            return classes[className];\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <Paper\r\n                    className={classes.paper}\r\n                    elevation={1}\r\n                >\r\n                    <EditorToolbar\r\n                        editorState={editorState}\r\n                        onToggle={handleToolbarToggle}\r\n                    />\r\n                    <Divider/>\r\n                    <div\r\n                        className={classes.editorContainer}\r\n                        onClick={handleContainerClick}\r\n                    >\r\n                        <Editor\r\n                            blockRenderMap={blockRenderMap}\r\n                            blockStyleFn={blockStyleFn}\r\n                            editorState={editorState}\r\n                            handleKeyCommand={handleKeyCommand}\r\n                            keyBindingFn={mapKeyToEditorCommand}\r\n                            onChange={handleEditorChange}\r\n                            placeholder={`Что нового? ${currentUserName}`}\r\n                            ref={editorRef}\r\n                            spellCheck\r\n                        />\r\n                    </div>\r\n                    <Tooltip\r\n                        title=\"Отправить\"\r\n                        type=\"submit\"\r\n                    >\r\n                        <IconButton\r\n                            color={post.description.length > 0 ? 'primary' : 'default'}\r\n                        >\r\n                            <SendIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Paper>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\n{/*<Input*/\r\n}\r\n{/*    className={classes.input}*/\r\n}\r\n{/*    disableUnderline*/\r\n}\r\n{/*    value = {post.description}*/\r\n}\r\n{/*    onChange = {(e) => setPost({...post, description: e.target.value})}*/\r\n}\r\n{/*    placeholder={*/\r\n}\r\n{/*        `Что вы думаете, ${currentUserName}`*/\r\n}\r\n{/*    }*/\r\n}\r\n{/*/>*/\r\n}\r\n{/*<Divider className={classes.divider}/>*/\r\n}\r\n{/*<Tooltip title=\"Прикрепить изображение\">*/\r\n}\r\n{/*    <IconButton*/\r\n}\r\n{/*        edge=\"end\"*/\r\n}\r\n{/*        //onClick={handleAttach}*/\r\n}\r\n{/*    >*/\r\n}\r\n{/*        <AddPhotoIcon/>*/\r\n}\r\n{/*    </IconButton>*/\r\n}\r\n{/*</Tooltip>*/\r\n}\r\n{/*<Tooltip title=\"Прикрепить файл\">*/\r\n}\r\n{/*    <IconButton*/\r\n}\r\n{/*        edge=\"end\"*/\r\n}\r\n{/*        //onClick={handleAttach}*/\r\n}\r\n{/*    >*/\r\n}\r\n{/*        <AttachFileIcon/>*/\r\n}\r\n{/*    </IconButton>*/\r\n}\r\n{/*</Tooltip>*/\r\n}\r\n{/*<input*/\r\n}\r\n{/*    className={classes.fileInput}*/\r\n}\r\n{/*    //ref={fileInputRef}*/\r\n}\r\n{/*    type=\"file\"*/\r\n}\r\n{/*/>*/\r\n}\r\n\r\nexport default AddPost;\r\n","// import React, {useState} from 'react';\r\n// import {makeStyles} from '@material-ui/core/styles';\r\n// import Card from '@material-ui/core/Card';\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import {v4 as uuidv4} from 'uuid';\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\n// import {CardActionArea} from \"@material-ui/core\";\r\n// import {colors} from \"@material-ui/core\";\r\n// import Dialog from \"@material-ui/core/Dialog/Dialog\";\r\n// import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n// import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import {CommentBubble, CommentForm} from \"../../../../components/PostCard/components\";\r\n// import moment from \"moment\";\r\n// import PhotoCard from \"../PhotoCard/PhotoCard\";\r\n//\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n//     card: {\r\n//         backgroundColor: colors.red[300],\r\n//         height: 215,\r\n//         width: 180,\r\n//         margin: theme.spacing(0.2)\r\n//     },\r\n//     media: {\r\n//         height: 215,\r\n//         width: 180,\r\n//     },\r\n//     background: {\r\n//         backgroundColor: '#616161'\r\n//     },\r\n//     content: {\r\n//         padding: theme.spacing(2),\r\n//         height: '89%'\r\n//     },\r\n//     actions: {\r\n//         padding: theme.spacing(1)\r\n//     },\r\n//     imageBlock: {\r\n//         flexGrow: 1,\r\n//         height: '100%',\r\n//         width: '100%',\r\n//         backgroundColor: '#212121',\r\n//     },\r\n//     commentsBlock: {\r\n//         minWidth: 330,\r\n//         width: '100%',\r\n//         backgroundColor: colors.grey[200],\r\n//     },\r\n//     cover: {\r\n//         minHeight: '100%',\r\n//         paddingTop: '85%',\r\n//         width: '60%',\r\n//         // marginLeft: '20%'\r\n//     },\r\n//     photoCounter: {\r\n//         paddingBottom: theme.spacing(4),\r\n//     },\r\n//     commentForm: {\r\n//         height: '5%',\r\n//         paddingRight: theme.spacing(1),\r\n//         paddingLeft: theme.spacing(1),\r\n//     },\r\n// }));\r\n//\r\n// const images = [\r\n//     {\r\n//         id: uuidv4(),\r\n//         src: 'https://i.pinimg.com/736x/1f/32/de/1f32de75ae0a1ac218a902f6f361a6d7.jpg',\r\n//         title: 'Фото 1',\r\n//         author: 'author',\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         src: 'https://i.pinimg.com/originals/ab/b6/a8/abb6a800ab2193fcedd9bda566b7402c.jpg',\r\n//         title: 'Фото 2',\r\n//         author: 'author',\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         src: 'https://st2.depositphotos.com/3364363/5972/i/600/depositphotos_59728757-stock-photo-waiting-for-a-new-day.jpg',\r\n//         title: 'Фото 3',\r\n//         author: 'author',\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         src: 'https://st2.depositphotos.com/1064024/10769/i/600/depositphotos_107694484-stock-photo-little-prince-illustration.jpg',\r\n//         title: 'Фото 4',\r\n//         author: 'author',\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         src: 'https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg',\r\n//         title: 'Фото 5',\r\n//         author: 'author',\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         src: 'https://i.pinimg.com/736x/1f/32/de/1f32de75ae0a1ac218a902f6f361a6d7.jpg',\r\n//         title: 'Фото 6',\r\n//         author: 'author',\r\n//     },\r\n// ];\r\n//\r\n// const comments = [\r\n//     {\r\n//         id: uuidv4(),\r\n//         author: {\r\n//             name: 'Валерея Жерепа',\r\n//             avatar: 'https://sun9-25.userapi.com/impg/NVcuVyjAocf9VEZyRm6rwZZNT7unbtOCpP0Diw/5cjtUAm5v0k.jpg?size=2047x2047&quality=96&sign=2e46eaaf544bcb0ab1d33f692d1abe9d&type=album'\r\n//         },\r\n//         message:\r\n//             'Вау, что за красотка 😍',\r\n//         created_at: moment().subtract(3, 'hours')\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         author: {\r\n//             name: 'Ева Вайсберг',\r\n//             avatar: 'https://sun9-47.userapi.com/impg/GmyvgEHDHK3zJJWOIkDlES_fhIVN-68vyNVezQ/ktCTj_mMjr0.jpg?size=960x960&quality=96&sign=d45c33ff4361679ea0f72e717ac46518&type=album'\r\n//         },\r\n//         message: 'Обалдеть...😱😱😱',\r\n//         created_at: moment().subtract(2, 'hours')\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         author: {\r\n//             name: 'Ксюша Руденко',\r\n//             avatar: 'https://sun9-53.userapi.com/impg/f3J4KY-U2TkUT0Harf9HzD1iCXcE-O3CaPJlJg/q9NTq1nZTWk.jpg?size=781x1080&quality=96&sign=ae24537a9661495b8bfdffc2cf0c8fba&type=album'\r\n//         },\r\n//         message:\r\n//             'Даже красивее чем я🤬😡',\r\n//         created_at: moment().subtract(3, 'hours')\r\n//     },\r\n//     {\r\n//         id: uuidv4(),\r\n//         author: {\r\n//             name: 'Денис Димитренко',\r\n//             avatar: 'https://sun9-60.userapi.com/impf/c850324/v850324982/1b71c5/LBDZGsQW8-Y.jpg?size=1472x1472&quality=96&sign=20eb6dfc703c6c32ce1cfebb1d6e79cd&type=album'\r\n//         },\r\n//         message: 'Бля, вот это красотка, какой же я додик, что мы расстались...😰 😰 😰 😰',\r\n//         created_at: moment().subtract(2, 'hours')\r\n//     },\r\n// ];\r\n//\r\n// const Gallery = props => {\r\n//     const classes = useStyles();\r\n//\r\n//     const [open, setOpen] = React.useState(false);\r\n//\r\n//     const handleClickOpen = () => {\r\n//         setOpen(true);\r\n//     };\r\n//\r\n//     const handleClose = () => {\r\n//         setOpen(false);\r\n//     };\r\n//\r\n//     if (!images) {\r\n//         return null;\r\n//     }\r\n//\r\n//     debugger;\r\n//\r\n//     return (\r\n//         <Grid container className={classes.root}>\r\n//             <Grid item xs={12}>\r\n//                 <Grid container justify=\"center\">\r\n//                     {images.map(image => (\r\n//                         <Card className={classes.card} key={image.id}>\r\n//                             <CardActionArea className={classes.mediaArea}>\r\n//                                 <CardMedia\r\n//                                     className={classes.media}\r\n//                                     component=\"img\"\r\n//                                     alt=\"image\"\r\n//                                     image={image.src}\r\n//                                     title={image.title}\r\n//                                     onClick={handleClickOpen}\r\n//                                 />\r\n//                                 <PhotoCard\r\n//                                     open={open}\r\n//                                     onClose={handleClose}\r\n//                                     key={image.id}\r\n//                                     image={image}\r\n//                                 />\r\n//                                 {/*<>*/}\r\n//                                 {/*    <Dialog*/}\r\n//                                 {/*        fullWidth={true}*/}\r\n//                                 {/*        maxWidth={\"lg\"}*/}\r\n//                                 {/*        open={open}*/}\r\n//                                 {/*        onClose={handleClose}*/}\r\n//                                 {/*        className={classes.background}*/}\r\n//                                 {/*    >*/}\r\n//                                 {/*        <Grid container className={classes.photoCardBlock}>*/}\r\n//                                 {/*            <Grid item xs>*/}\r\n//                                 {/*                <Grid container justify=\"space-around\" alignItems=\"center\" className={classes.imageBlock}>*/}\r\n//                                 {/*                    <ArrowBackIosIcon fontSize='large' color='inherit'/>*/}\r\n//                                 {/*                    <CardMedia*/}\r\n//                                 {/*                        key={image.id}*/}\r\n//                                 {/*                        className={classes.cover}*/}\r\n//                                 {/*                        image={image.src}*/}\r\n//                                 {/*                    />*/}\r\n//                                 {/*                    <ArrowForwardIosIcon fontSize='large' color='inherit'/>*/}\r\n//                                 {/*                </Grid>*/}\r\n//                                 {/*            </Grid>*/}\r\n//                                 {/*            <Grid container*/}\r\n//                                 {/*                  xs={4}*/}\r\n//                                 {/*                  direction=\"column\"*/}\r\n//                                 {/*                  justify=\"flex-end\"*/}\r\n//                                 {/*                  className={classes.commentsBlock}*/}\r\n//                                 {/*            >*/}\r\n//                                 {/*                <Grid item className={classes.content}>*/}\r\n//                                 {/*                    <Grid>*/}\r\n//                                 {/*                        <Typography className={classes.photoCounter} variant=\"body1\">*/}\r\n//                                 {/*                            Фотография 1 из 10*/}\r\n//                                 {/*                        </Typography>*/}\r\n//                                 {/*                    </Grid>*/}\r\n//                                 {/*                    {comments && (*/}\r\n//                                 {/*                        <div className={classes.comments}>*/}\r\n//                                 {/*                            {comments.map(comment => (*/}\r\n//                                 {/*                                <CommentBubble*/}\r\n//                                 {/*                                    comment={comment}*/}\r\n//                                 {/*                                    key={comment.id}*/}\r\n//                                 {/*                                />*/}\r\n//                                 {/*                            ))}*/}\r\n//                                 {/*                        </div>*/}\r\n//                                 {/*                    )}*/}\r\n//                                 {/*                </Grid>*/}\r\n//                                 {/*                <Grid item className={classes.actions}>*/}\r\n//                                 {/*                    <CommentForm className={classes.commentForm}/>*/}\r\n//                                 {/*                </Grid>*/}\r\n//                                 {/*            </Grid>*/}\r\n//                                 {/*        </Grid>*/}\r\n//                                 {/*    </Dialog>*/}\r\n//                                 {/*</>*/}\r\n//                             </CardActionArea>\r\n//                         </Card>\r\n//                     ))}\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </Grid>\r\n//     );\r\n// };\r\n//\r\n// export default Gallery;\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gallery: {\r\n        maxWidth: '50%',\r\n    }\r\n    // root: {\r\n    //     display: 'flex',\r\n    //     flexWrap: 'wrap',\r\n    //     justifyContent: 'space-around',\r\n    //     overflow: 'hidden',\r\n    //     backgroundColor: theme.palette.background.paper,\r\n    // },\r\n    // gridList: {\r\n    //     flexWrap: 'nowrap',\r\n    //     // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    //     transform: 'translateZ(0)',\r\n    // },\r\n    // title: {\r\n    //     color: theme.palette.primary.light,\r\n    // },\r\n    // titleBar: {\r\n    //     background:\r\n    //         'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    // },\r\n}));\r\n\r\nconst Gallery = () => {\r\n\r\n    const classes = useStyles();\r\n    const [images, setImages] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        let shouldCancel = false;\r\n\r\n        const call = async () => {\r\n            const response = await axios.get(\r\n                \"https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948\"\r\n            );\r\n            if (!shouldCancel && response.data && response.data.length > 0) {\r\n                setImages(\r\n                    response.data.map(url => ({\r\n                        original: `${url}=w1024`,\r\n                        thumbnail: `${url}=w100`\r\n                    }))\r\n                );\r\n            }\r\n        };\r\n        call();\r\n        return () => (shouldCancel = true);\r\n    }, []);\r\n\r\n    // const tileData = [\r\n    //     {\r\n    //         img: 'https://sun9-74.userapi.com/impf/c834202/v834202342/17928f/bs6F1rkQIJ4.jpg?size=608x1080&quality=96&sign=23978f50e42b4ea474dca2254125b915&type=album',\r\n    //         title: 'Image',\r\n    //         author: 'author',\r\n    //     },\r\n    //     {\r\n    //         img: 'https://sun9-74.userapi.com/impf/c834202/v834202342/17928f/bs6F1rkQIJ4.jpg?size=608x1080&quality=96&sign=23978f50e42b4ea474dca2254125b915&type=album',\r\n    //         title: 'Image',\r\n    //         author: 'author',\r\n    //     },\r\n    //     {\r\n    //         img: 'https://sun9-74.userapi.com/impf/c834202/v834202342/17928f/bs6F1rkQIJ4.jpg?size=608x1080&quality=96&sign=23978f50e42b4ea474dca2254125b915&type=album',\r\n    //         title: 'Image',\r\n    //         author: 'author',\r\n    //     },\r\n    //     {\r\n    //         img: 'https://sun9-74.userapi.com/impf/c834202/v834202342/17928f/bs6F1rkQIJ4.jpg?size=608x1080&quality=96&sign=23978f50e42b4ea474dca2254125b915&type=album',\r\n    //         title: 'Image',\r\n    //         author: 'author',\r\n    //     },\r\n    // ];\r\n\r\n    return (\r\n        // <div className={classes.root}>\r\n        //     <GridList className={classes.gridList} cols={2.5}>\r\n        //         {tileData.map((tile) => (\r\n        //             <GridListTile key={tile.img}>\r\n        //                 <img src={tile.img} alt={tile.title}/>\r\n        //                 <GridListTileBar\r\n        //                     title={tile.title}\r\n        //                     classes={{\r\n        //                         root: classes.titleBar,\r\n        //                         title: classes.title,\r\n        //                     }}\r\n        //                     actionIcon={\r\n        //                         <IconButton aria-label={`star ${tile.title}`}>\r\n        //                             <StarBorderIcon className={classes.title}/>\r\n        //                         </IconButton>\r\n        //                     }\r\n        //                 />\r\n        //             </GridListTile>\r\n        //         ))}\r\n        //     </GridList>\r\n        // </div>\r\n        <div className={classes.gallery}>\r\n            {\r\n                images\r\n                ? <ImageGallery items={images} thumbnailPosition='left' showPlayButton={false}/>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Gallery;\r\n","/* eslint-disable react/no-multi-comp */\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Tooltip, Button} from '@material-ui/core';\r\nimport {fade} from '@material-ui/core/styles/colorManipulator';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined';\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    root: {},\r\n    inner: {\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n}));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n    button: {\r\n        padding: 0,\r\n        width: 32,\r\n        height: 32,\r\n        minWidth: 32,\r\n        color: theme.palette.icon,\r\n        '& + &': {\r\n            marginLeft: theme.spacing(1)\r\n        }\r\n    },\r\n    activeButton: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n        color: theme.palette.primary.main\r\n    }\r\n}));\r\n\r\nconst BLOCK_TYPES = [\r\n    {\r\n        blockType: 'header-one',\r\n        tooltip: 'Заголовок 1',\r\n        text: 'H1'\r\n    },\r\n    {\r\n        blockType: 'header-two',\r\n        tooltip: 'Заголовок 2',\r\n        text: 'H2'\r\n    },\r\n    {\r\n        blockType: 'header-three',\r\n        tooltip: 'Заголовок 3',\r\n        text: 'H3'\r\n    },\r\n    {\r\n        blockType: 'header-four',\r\n        tooltip: 'Заголовок 4',\r\n        text: 'H4'\r\n    },\r\n    {\r\n        blockType: 'header-five',\r\n        tooltip: 'Заголовок 5',\r\n        text: 'H5'\r\n    },\r\n    {\r\n        blockType: 'header-six',\r\n        tooltip: 'Заголовок 6',\r\n        text: 'H6'\r\n    },\r\n    {\r\n        blockType: 'blockquote',\r\n        tooltip: 'Цитата',\r\n        icon: FormatQuoteIcon\r\n    },\r\n    {\r\n        blockType: 'unordered-list-item',\r\n        tooltip: 'Неупорядоченный список',\r\n        icon: FormatListBulletedIcon\r\n    },\r\n    {\r\n        blockType: 'ordered-list-item',\r\n        tooltip: 'Упорядоченный список',\r\n        icon: FormatListNumberedIcon\r\n    },\r\n    {\r\n        blockType: 'code-block',\r\n        tooltip: 'Блок кода',\r\n        icon: CodeIcon\r\n    },\r\n    // {\r\n    //     blockType: 'left',\r\n    //     tooltip: 'Выровнять по левому краю',\r\n    //     icon: FormatAlignLeftIcon\r\n    // },\r\n    // {\r\n    //     blockType: 'center',\r\n    //     tooltip: 'Выровнять по центру',\r\n    //     icon: FormatAlignCenterIcon\r\n    // },\r\n    // {\r\n    //     blockType: 'right',\r\n    //     tooltip: 'Выровнять по правому краю',\r\n    //     icon: FormatAlignRightIcon\r\n    // },\r\n    // {\r\n    //     blockType: 'justify',\r\n    //     tooltip: 'Выровнять по ширине',\r\n    //     icon: FormatAlignJustifyIcon\r\n    // }\r\n];\r\n\r\nconst INLINE_STYLES = [\r\n    {\r\n        inlineStyle: 'BOLD',\r\n        tooltip: 'Жирный',\r\n        icon: FormatBoldIcon\r\n    },\r\n    {\r\n        inlineStyle: 'ITALIC',\r\n        tooltip: 'Курсив',\r\n        icon: FormatItalicIcon\r\n    },\r\n    {\r\n        inlineStyle: 'UNDERLINE',\r\n        tooltip: 'Подчеркивание',\r\n        icon: FormatUnderlined\r\n    },\r\n    {\r\n        inlineStyle: 'CODE',\r\n        tooltip: 'Моноширинный',\r\n        icon: CodeIcon\r\n    }\r\n];\r\n\r\nconst ButtonBase = props => {\r\n    const {active, tooltip, children, ...rest} = props;\r\n\r\n    const classes = useStyles2();\r\n\r\n    return (\r\n        <Tooltip title={tooltip}>\r\n            <Button\r\n                {...rest}\r\n                className={clsx(classes.button, {\r\n                    [classes.activeButton]: active\r\n                })}\r\n            >\r\n                {children}\r\n            </Button>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\n\r\nconst BlockTypeButtons = props => {\r\n    const {editorState, onToggle} = props;\r\n\r\n    const handleClick = (event, blockType) => {\r\n        event.preventDefault();\r\n\r\n        onToggle('blockType', blockType);\r\n    };\r\n\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getType();\r\n    const blockData = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getData();\r\n\r\n    return (\r\n        <>\r\n            {BLOCK_TYPES.map(button => {\r\n                let active = false;\r\n\r\n                if (['left', 'center', 'right', 'justify'].includes(button.blockType)) {\r\n                    active = blockData.get('text-align') === button.blockType;\r\n                } else {\r\n                    active = button.blockType === blockType;\r\n                }\r\n\r\n                return (\r\n                    <ButtonBase\r\n                        active={active}\r\n                        key={button.blockType}\r\n                        onClick={event => handleClick(event, button.blockType)}\r\n                        tooltip={button.tooltip}\r\n                    >\r\n                        {button.icon ? <button.icon/> : button.text}\r\n                    </ButtonBase>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nconst InlineStyleButtons = props => {\r\n    const {editorState, onToggle} = props;\r\n\r\n    const handleClick = (event, inlineStyle) => {\r\n        event.preventDefault();\r\n        onToggle('inlineStyle', inlineStyle);\r\n    };\r\n\r\n    const currentStyle = editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <>\r\n            {INLINE_STYLES.map(button => (\r\n                <ButtonBase\r\n                    active={currentStyle.has(button.inlineStyle)}\r\n                    key={button.inlineStyle}\r\n                    onClick={event => handleClick(event, button.inlineStyle)}\r\n                    tooltip={button.tooltip}\r\n                >\r\n                    {button.icon ? <button.icon/> : button.text}\r\n                </ButtonBase>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst EditorToolbar = props => {\r\n    const {editorState, onToggle, className, ...rest} = props;\r\n\r\n    const classes = useStyles1();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <PerfectScrollbar>\r\n                <div className={classes.inner}>\r\n                    <BlockTypeButtons\r\n                        editorState={editorState}\r\n                        onToggle={onToggle}\r\n                    />\r\n                    <InlineStyleButtons\r\n                        editorState={editorState}\r\n                        onToggle={onToggle}\r\n                    />\r\n                </div>\r\n            </PerfectScrollbar>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default EditorToolbar;\r\n","import { Map } from 'immutable';\r\nimport { EditorState, DefaultDraftBlockRenderMap, Modifier } from 'draft-js';\r\n\r\nexport function setBlockData(editorState, data) {\r\n  const newContentState = Modifier.setBlockData(\r\n    editorState.getCurrentContent(),\r\n    editorState.getSelection(),\r\n    data\r\n  );\r\n\r\n  return EditorState.push(editorState, newContentState, 'change-block-data');\r\n}\r\n\r\nconst newBlockRenderMap = Map({\r\n  unstyled: {\r\n    element: 'p'\r\n  },\r\n  paragraph: {\r\n    element: 'p'\r\n  }\r\n});\r\n\r\n// TODO:\r\n// 1. DraftJS uses 'div' tags inside every block.\r\n//    When we use 'p' tag for paragraphs, we get a warning because \"div\" tag cannot be inside a \"p\" tag.\r\n\r\nexport const blockRenderMap = DefaultDraftBlockRenderMap.merge(\r\n  newBlockRenderMap\r\n);\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Link, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  bubble: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  time: {\r\n    marginLeft: 'auto'\r\n  },\r\n  message: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst CommentBubble = props => {\r\n  const { comment, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        component={RouterLink}\r\n        src={comment.author.avatar}\r\n        to=\"/profile/1/\"\r\n      />\r\n      <div className={classes.bubble}>\r\n        <div className={classes.header}>\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to=\"/profile/1/\"\r\n            variant=\"h6\"\r\n          >\r\n            {comment.author.name}\r\n          </Link>\r\n          <Typography\r\n            className={classes.time}\r\n            variant=\"body2\"\r\n          >\r\n            {moment(comment.created_at).fromNow()}\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          className={classes.message}\r\n          variant=\"body1\"\r\n        >\r\n          {comment.message}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CommentBubble;\r\n","import React, { useRef, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  Paper,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  paper: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5, 2)\r\n  },\r\n  input: {\r\n    width: '100%'\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 24\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst CommentForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [value, setValue] = useState('');\r\n\r\n  const sender = {\r\n    avatar: 'https://sun9-37.userapi.com/impg/P4iaWmLhlicRzZvLAC_er6toAB8kH8-HYoosYg/jnY0KD1HkXw.jpg?size=1365x2048&quality=96&sign=501cc11eaab8c5bbfccf5c825b4d43c5&type=album'\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        src={sender.avatar}\r\n      />{' '}\r\n      <Paper\r\n        className={classes.paper}\r\n        elevation={1}\r\n      >\r\n        <Input\r\n          className={classes.input}\r\n          disableUnderline\r\n          onChange={handleChange}\r\n          placeholder=\"Напишите что-нибудь\"\r\n        />\r\n      </Paper>\r\n      <Tooltip title=\"Отправить\">\r\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Divider className={classes.divider} />\r\n      <Tooltip title=\"Прикрепить картинку\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={handleAttach}\r\n        >\r\n          <AddPhotoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Прикрепить файл\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={handleAttach}\r\n        >\r\n          <AttachFileIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <input\r\n        className={classes.fileInput}\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CommentForm;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n  colors\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  likeButton: {},\r\n  likedButton: {\r\n    color: colors.red[600]\r\n  },\r\n  shareButton: {\r\n    marginLeft: 'auto'\r\n  },\r\n  shareIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Reactions = props => {\r\n  const { post, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [liked, setLiked] = useState(post.liked);\r\n  const [likes, setLikes] = useState(post.likes);\r\n\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n    setLikes(likes => likes + 1);\r\n  };\r\n\r\n  const handleUnlike = () => {\r\n    setLiked(false);\r\n    setLikes(likes => likes - 1);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {liked ? (\r\n        <Tooltip title=\"Unlike\">\r\n          <IconButton\r\n            className={classes.likedButton}\r\n            onClick={handleUnlike}\r\n            size=\"small\"\r\n          >\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Like\">\r\n          <IconButton\r\n            className={classes.likeButton}\r\n            onClick={handleLike}\r\n            size=\"small\"\r\n          >\r\n            <FavoriteBorderIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        variant=\"h6\"\r\n      >\r\n        {likes}\r\n      </Typography>\r\n      <Button\r\n        className={classes.shareButton}\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n      >\r\n        <ShareIcon className={classes.shareIcon} />\r\n        Поделиться\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Reactions;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Popover,\r\n    Divider,\r\n    colors,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n} from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deletePost} from \"../../../store/actions/postActions\";\r\n\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: 200,\r\n        maxWidth: '100%'\r\n    },\r\n    actions: {\r\n        backgroundColor: colors.grey[50],\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nconst NotificationsPopover = props => {\r\n    const {posts, post, setPost, closedOptions, handleCloseOptions, anchorEl, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const authedUser = useSelector(state => state.auth);\r\n    const currentUser = useSelector(state => state.userById);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleOnUpdateClick = (id) => {\r\n        const foundPost = posts.find((post) => post._id === id);\r\n        setPost({ ...foundPost });\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n        toast.info(\"В поле создания поста, перепишете пост и нажмите отправить...\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deletePost(id));\r\n    };\r\n\r\n    return (\r\n        <Popover\r\n            {...rest}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center'\r\n            }}\r\n        >\r\n            <div className={classes.root}>\r\n                <Divider/>\r\n                {authedUser._id === currentUser._id ? (\r\n                    <List>\r\n                        <ListItem button onClick={() => handleOnUpdateClick(post._id)}>\r\n                            <ListItemIcon>\r\n                                <EditIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Редактировать пост\r\n                            (Напишете новый текст в поле создания поста и нажмите отправить)\" />\r\n                        </ListItem>\r\n                        <ListItem button onClick={() => handleDelete(post._id)}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Удалить пост\" />\r\n                        </ListItem>\r\n                    </List>\r\n                ) : (\r\n                    <List>\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <CancelIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Скрыть пост\" />\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemIcon>\r\n                                <ReportProblemIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Пожаловаться\" />\r\n                        </ListItem>\r\n                    </List>\r\n                )}\r\n                <Divider/>\r\n            </div>\r\n        </Popover>\r\n    );\r\n};\r\n\r\n\r\nexport default NotificationsPopover;","import React, {useRef, useState} from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActionArea,\r\n    CardMedia,\r\n    Avatar,\r\n    Link,\r\n    Typography,\r\n    Divider,\r\n    Tooltip,\r\n    colors, MenuItem, Menu\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\n\r\nimport {Reactions, CommentBubble, CommentForm, OptionsPopover} from './components';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Gallery from \"../../views/Profile/components/Gallery\";\r\nimport {convertFromRaw, Editor, EditorState} from \"draft-js\";\r\nimport {likeDislikePost} from \"../../store/actions/postActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    subheader: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    accessTimeIcon: {\r\n        color: theme.palette.text.secondary,\r\n        fontSize: '14px',\r\n        height: 14,\r\n        width: 14,\r\n        marginRight: 6\r\n    },\r\n    content: {\r\n        paddingTop: 0,\r\n    },\r\n    editorField: {\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    message: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    mediaArea: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    media: {\r\n        backgroundPosition: 'initial'\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {},\r\n    likeButton: {},\r\n    likedButton: {\r\n        color: colors.red[600]\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    actionsGroup: {\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst PostCard = (props) => {\r\n    const { scrollRef, posts, post, setPost, className, ...rest } = props;\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const authUserId = useSelector(state => state.auth._id)\r\n\r\n    function likedByUser(userId) {\r\n        return userId === authUserId;\r\n    }\r\n\r\n    const [like, setLike] = useState(post.likes.length);\r\n    const [isLiked, setIsLiked] = useState(post.likes.some(likedByUser));\r\n\r\n    const likeHandler = () => {\r\n        try {\r\n            dispatch(likeDislikePost(post._id, authUserId))\r\n        } catch (err) {\r\n        }\r\n        setLike(isLiked ? like - 1 : like + 1);\r\n        setIsLiked(!isLiked);\r\n    };\r\n\r\n    const [closedOptions, setOpenOptions] = useState(false);\r\n    const handleOpenOptions = () => {\r\n        setOpenOptions(true);\r\n    };\r\n    const handleCloseOptions = () => {\r\n        setOpenOptions(false);\r\n    };\r\n    const optionsRef = useRef(null);\r\n\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n            ref={scrollRef}\r\n        >\r\n            <OptionsPopover\r\n                anchorEl={optionsRef.current}\r\n                onClose={handleCloseOptions}\r\n                open={closedOptions}\r\n                handleCloseOptions={handleCloseOptions}\r\n                closedOptions={closedOptions}\r\n                post={post}\r\n                setPost={setPost}\r\n                posts={posts}\r\n            />\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar\r\n                        alt=\"Персона\"\r\n                        component={RouterLink}\r\n                        src={post.profilePicture}\r\n                        to={`profile/${post.uid}/wall`}\r\n                    />\r\n                }\r\n                action={\r\n                    <IconButton\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleOpenOptions}\r\n                        ref={optionsRef}\r\n                    >\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                }\r\n                disableTypography\r\n                subheader={\r\n                    <div className={classes.subheader}>\r\n                        <AccessTimeIcon className={classes.accessTimeIcon}/>\r\n                        <Typography variant=\"body2\">\r\n                            {moment(post.date).fromNow()}\r\n                        </Typography>\r\n                    </div>\r\n                }\r\n                title={\r\n                    <Link\r\n                        color=\"textPrimary\"\r\n                        component={RouterLink}\r\n                        to={`profile/${post.uid}/wall`}\r\n                        variant=\"h6\"\r\n                    >\r\n                        {post.author}\r\n                    </Link>\r\n                }\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <div className={classes.editorField}>\r\n                    <Editor\r\n                        editorState={EditorState.createWithContent(convertFromRaw(JSON.parse(post.description)))}\r\n                        readOnly={true}\r\n                    />\r\n                </div>\r\n                {/*<Typography*/}\r\n                {/*    className={classes.message}*/}\r\n                {/*    variant=\"h5\"*/}\r\n                {/*>*/}\r\n                {/*    {post.description}*/}\r\n                {/*</Typography>*/}\r\n                {/*{post.images && (*/}\r\n                {/*    <div className={classes.mediaArea}>*/}\r\n                {/*        <div*/}\r\n                {/*            className={classes.media}*/}\r\n                {/*        >*/}\r\n                {/*            <Gallery/>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*)}*/}\r\n            </CardContent>\r\n            <div className={classes.actionsGroup}>\r\n                <div className={classes.actions}>\r\n                    {isLiked ? (\r\n                        <IconButton\r\n                            className={classes.likedButton}\r\n                            onClick={likeHandler}\r\n                            size=\"small\"\r\n                        >\r\n                            <FavoriteIcon/>\r\n                        </IconButton>\r\n                    ) : (\r\n                        <Tooltip title=\"Нравится\">\r\n                            <IconButton\r\n                                className={classes.likeButton}\r\n                                onClick={likeHandler}\r\n                                size=\"small\"\r\n                            >\r\n                                <FavoriteBorderIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    )}\r\n                    <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"subtitle1\"\r\n                    >\r\n                        Понравилось {like} людям\r\n                    </Typography>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"Показать комментарии\"\r\n                    >\r\n                        <Typography\r\n                            color=\"textSecondary\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            Комментарии\r\n                        </Typography>\r\n                        <ExpandMoreIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <Divider className={classes.divider}/>\r\n                    {/*{post.comments && (*/}\r\n                    {/*    <div className={classes.comments}>*/}\r\n                    {/*        {post.comments.map(comment => (*/}\r\n                    {/*            <CommentBubble*/}\r\n                    {/*                comment={comment}*/}\r\n                    {/*                key={comment.id}*/}\r\n                    {/*            />*/}\r\n                    {/*        ))}*/}\r\n                    {/*    </div>*/}\r\n                    {/*)}*/}\r\n                    <Divider className={classes.divider}/>\r\n                    <CommentForm/>\r\n                </Collapse>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default PostCard;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport moment from \"moment\";\r\nimport Timeline from \"@material-ui/lab/Timeline/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator/TimelineSeparator\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot/TimelineDot\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    timelineItem: {},\r\n    message: {}\r\n}));\r\n\r\n\r\nconst TimelinePosts = props => {\r\n    const { scrollRef, posts, post, setPost, className, ...rest} = props;\r\n\r\n    const executeScroll = () => scrollRef.current.scrollIntoView()\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Timeline\r\n            align=\"alternate\"\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n            onClick={executeScroll}\r\n        >\r\n            <TimelineItem className={classes.timelineItem}>\r\n                <TimelineOppositeContent>\r\n                    <Typography color=\"textSecondary\">{moment(post.date).fromNow()}</Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineDot/>\r\n                    <TimelineConnector/>\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Typography color=\"textSecondary\">Пост от</Typography>\r\n                    <Typography variant=\"subtitle1\">{post.author}</Typography>\r\n                    {/*<Typography className={classes.message} variant=\"subtitle2\" color=\"textSecondary\">{post.comments.length} комментария</Typography>*/}\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n        </Timeline>\r\n    );\r\n};\r\n\r\n\r\nexport default TimelinePosts;\r\n","import React, {useEffect} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPosts} from \"../../../../store/actions/postActions\";\r\nimport TimelinePosts from \"./TimelinePosts\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nconst Timeline = props => {\r\n    const { scrollRef, post, setPost, currentUser, className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const posts = useSelector(state => state.postsList)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts(currentUser._id));\r\n    }, [dispatch, currentUser._id])\r\n\r\n    return(\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            {posts.length && posts.map((post) => (\r\n                <TimelinePosts\r\n                    scrollRef={scrollRef}\r\n                    key={post.id}\r\n                    post={post}\r\n                    setPost={setPost}\r\n                    posts={posts}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timeline;"],"sourceRoot":""}