{"version":3,"sources":["views/Login/Login.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","divider","height","form","width","submit","Login","props","className","rest","classes","from","useHistory","location","state","pathname","dispatch","useDispatch","useState","email","password","creds","setCreds","useSelector","auth","_id","to","clsx","Container","component","maxWidth","CssBaseline","Avatar","Divider","Grid","container","justifyContent","direction","item","noValidate","onSubmit","e","preventDefault","signIn","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","toLowerCase","type","FormControlLabel","control","Checkbox","disabled","Button","xs","Box","mt"],"mappings":"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","file":"static/js/21.f07d6483.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Redirect, useHistory} from \"react-router\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../../store/actions/authActions\";\r\nimport {Divider} from \"@material-ui/core\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Копирайт © '}\r\n            <Link color=\"inherit\" href=\"http://localhost:3000/\">\r\n                Фэт\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    divider: {\r\n        height: \"10px\"\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = props => {\r\n\r\n    const {className, ...rest} = props;\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n    const { from } = props.location.state || { from: {pathname: '/' } }\r\n\r\n    const dispatch = useDispatch();\r\n    const [creds, setCreds] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signIn(creds.email, creds.password));\r\n        setCreds({ email: \"\", password: \"\" });\r\n    };\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    if (auth._id) return <Redirect to=\"/\" />;\r\n\r\n    return(\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Авторизация\r\n                    </Typography>\r\n                    <Typography align=\"center\">Чтобы посмотреть эту страничку: {from.pathname}, тебе надо авторизоваться</Typography>\r\n                    <Divider className={classes.divider} />\r\n                    <Grid container justifyContent=\"center\" direction=\"row\"\r\n                          alignItems=\"center\" spacing={3}>\r\n                        <Grid item>\r\n                            <Typography>Тестовый Логин:</Typography>\r\n                            <code>test@gmail.com</code>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>Тестовый Пароль:</Typography>\r\n                            <code>12345test</code>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Эмейл\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            value={creds.email}\r\n                            onChange={(e) => setCreds({ ...creds, email: e.target.value.toLowerCase() })}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Пароль\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={creds.password}\r\n                            onChange={(e) => setCreds({ ...creds, password: e.target.value })}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Запомнить меня\"\r\n                            disabled\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Забыли пароль?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/auth/register\" variant=\"body2\">\r\n                                    Нету аккаунта? Зарегистрируйтесь\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={8}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"sourceRoot":""}