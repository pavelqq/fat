{"version":3,"sources":["views/Chat/components/ConversationList/components/ConversationListItem/ConversationListItem.js","views/Chat/components/ConversationList/ConversationList.js","views/Chat/components/ConversationDetails/components/ConversationToolbar/ConversationToolbar.js","views/Chat/components/ConversationDetails/components/ConversationMessage/ConversationMessage.js","views/Chat/components/ConversationDetails/components/ConversationMessages/ConversationMessages.js","views/Chat/components/ConversationDetails/components/ConversationForm/ConversationForm.js","views/Chat/components/ConversationDetails/ConversationDetails.js","views/Chat/components/ConversationPlaceholder/ConversationPlaceholder.js","views/Chat/Chat.js"],"names":["useStyles","makeStyles","theme","active","boxShadow","palette","primary","main","backgroundColor","colors","grey","avatar","height","width","details","marginLeft","spacing","display","flexDirection","alignItems","unread","marginTop","padding","minWidth","ConversationListItem","props","conversation","className","rest","classes","lastMessage","messages","length","ListItem","button","clsx","component","RouterLink","to","id","ListItemAvatar","Avatar","alt","src","otherUser","ListItemText","name","primaryTypographyProps","noWrap","variant","secondary","sender","content","secondaryTypographyProps","Typography","moment","created_at","isSame","format","fromNow","Label","color","red","shape","root","white","searchInput","flexGrow","ConversationList","conversations","selectedConversation","useRouter","match","params","Toolbar","Input","disableUnderline","placeholder","Tooltip","title","IconButton","edge","Divider","List","disablePadding","map","i","divider","backButton","marginRight","user","flexShrink","activity","statusBullet","search","flexBasis","breakpoints","down","flex","searchIcon","icon","ConversationToolbar","moreRef","useRef","useState","openMenu","setOpenMenu","StatusBullet","size","lastActivity","Paper","elevation","onClick","ref","Menu","anchorEl","current","keepMounted","onClose","open","MenuItem","ListItemIcon","marginBottom","authUser","justifyContent","contrastText","inner","maxWidth","body","text","borderRadius","image","footer","ConversationMessage","message","Link","contentType","time","overflow","maxHeight","ConversationMessages","paper","input","fileInput","ConversationForm","fileInputRef","value","setValue","handleAttach","click","onChange","event","persist","target","type","ConversationDetails","textAlign","margin","ConversationPlaceholder","transform","openConversion","conversationList","borderRight","conversationDetails","conversationPlaceholder","Chat","router","setConversations","useEffect","mounted","axios","get","then","response","data","find","c","Page"],"mappings":"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","file":"static/js/10.52bac561.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Avatar,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport Label from \"../../../../../../components/Label\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    active: {\r\n        boxShadow: `inset 4px 0px 0px ${theme.palette.primary.main}`,\r\n        backgroundColor: colors.grey[50]\r\n    },\r\n    avatar: {\r\n        height: 40,\r\n        width: 40\r\n    },\r\n    details: {\r\n        marginLeft: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end'\r\n    },\r\n    unread: {\r\n        marginTop: 2,\r\n        padding: 2,\r\n        height: 18,\r\n        minWidth: 18\r\n    }\r\n}));\r\n\r\nconst ConversationListItem = props => {\r\n    const {active, conversation, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n    const lastMessage = conversation.messages[conversation.messages.length - 1];\r\n\r\n    return (\r\n        <ListItem\r\n            {...rest}\r\n            button\r\n            className={clsx(\r\n                {\r\n                    [classes.active]: active\r\n                },\r\n                className\r\n            )}\r\n            component={RouterLink}\r\n            to={`/chat/${conversation.id}`}\r\n        >\r\n            <ListItemAvatar>\r\n                <Avatar\r\n                    alt=\"Ава\"\r\n                    className={classes.avatar}\r\n                    src={conversation.otherUser.avatar}\r\n                />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={conversation.otherUser.name}\r\n                primaryTypographyProps={{\r\n                    noWrap: true,\r\n                    variant: 'h6'\r\n                }}\r\n                secondary={`${lastMessage.sender.name}: ${lastMessage.content}`}\r\n                secondaryTypographyProps={{\r\n                    noWrap: true,\r\n                    variant: 'body1'\r\n                }}\r\n            />\r\n            <div className={classes.details}>\r\n                <Typography\r\n                    noWrap\r\n                    variant=\"body2\"\r\n                >\r\n                    {moment(lastMessage.created_at).isSame(moment(), 'day')\r\n                        ? moment(lastMessage.created_at).format('LT')\r\n                        : moment(lastMessage.created_at).fromNow()}\r\n                </Typography>\r\n                {conversation.unread > 0 && (\r\n                    <Label\r\n                        className={classes.unread}\r\n                        color={colors.red[500]}\r\n                        shape=\"rounded\"\r\n                    >\r\n                        {conversation.unread}\r\n                    </Label>\r\n                )}\r\n            </div>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationListItem;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Input,\r\n    IconButton,\r\n    Tooltip,\r\n    Divider,\r\n    List\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useRouter from \"../../../../utils/useRouter\";\r\nimport {ConversationListItem} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.white\r\n    },\r\n    searchInput: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst ConversationList = props => {\r\n    const {conversations, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n    const selectedConversation = router.match.params.id;\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Toolbar>\r\n                <Input\r\n                    className={classes.searchInput}\r\n                    disableUnderline\r\n                    placeholder=\"Поисков контактов\"\r\n                />\r\n                <Tooltip title=\"Поиск\">\r\n                    <IconButton edge=\"end\">\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n            <Divider/>\r\n            <List disablePadding>\r\n                {conversations.map((conversation, i) => (\r\n                    <ConversationListItem\r\n                        active={conversation.id === selectedConversation}\r\n                        conversation={conversation}\r\n                        divider={i < conversations.length - 1}\r\n                        key={conversation.id}\r\n                    />\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationList;\r\n","import React, {useRef, useState} from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    IconButton,\r\n    Input,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem,\r\n    Paper,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOffOutlined';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport StatusBullet from \"../../../../../../components/StatusBullet\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.white\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(2),\r\n        '@media (min-width: 864px)': {\r\n            display: 'none'\r\n        }\r\n    },\r\n    user: {\r\n        flexShrink: 0,\r\n        flexGrow: 1\r\n    },\r\n    activity: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    statusBullet: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    search: {\r\n        height: 42,\r\n        padding: theme.spacing(0, 2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexBasis: 300,\r\n        marginLeft: 'auto',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flex: '1 1 auto'\r\n        }\r\n    },\r\n    searchIcon: {\r\n        marginRight: theme.spacing(2),\r\n        color: theme.palette.icon\r\n    },\r\n    searchInput: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst ConversationToolbar = props => {\r\n    const {conversation, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n    const moreRef = useRef(null);\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n\r\n    const handleMenuOpen = () => {\r\n        setOpenMenu(true);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setOpenMenu(false);\r\n    };\r\n\r\n    return (\r\n        <Toolbar\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Tooltip title=\"Назад\">\r\n                <IconButton\r\n                    className={classes.backButton}\r\n                    component={RouterLink}\r\n                    edge=\"start\"\r\n                    to=\"/chat\"\r\n                >\r\n                    <KeyboardBackspaceIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <div className={classes.user}>\r\n                <Typography variant=\"h6\">{conversation.otherUser.name}</Typography>\r\n                <div className={classes.activity}>\r\n                    {conversation.otherUser.active ? (\r\n                        <>\r\n                            <StatusBullet\r\n                                className={classes.statusBullet}\r\n                                color=\"success\"\r\n                                size=\"small\"\r\n                            />\r\n                            <Typography variant=\"body2\">Сейчас онлайн</Typography>\r\n                        </>\r\n                    ) : (\r\n                        <Typography variant=\"body2\">\r\n                            Active {moment(conversation.otherUser.lastActivity).fromNow()}\r\n                        </Typography>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Paper\r\n                className={classes.search}\r\n                elevation={1}\r\n            >\r\n                <SearchIcon className={classes.searchIcon}/>\r\n                <Input\r\n                    className={classes.searchInput}\r\n                    disableUnderline\r\n                    placeholder=\"Поиск по диалогу\"\r\n                />\r\n            </Paper>\r\n            <Tooltip title=\"Больше\">\r\n                <IconButton\r\n                    onClick={handleMenuOpen}\r\n                    ref={moreRef}\r\n                >\r\n                    <MoreIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                anchorEl={moreRef.current}\r\n                keepMounted\r\n                onClose={handleMenuClose}\r\n                open={openMenu}\r\n            >\r\n                <MenuItem>\r\n                    <ListItemIcon>\r\n                        <BlockIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Заблокировать пользователя\"/>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <ListItemIcon>\r\n                        <DeleteIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Удалить сообщения\"/>\r\n                </MenuItem>\r\n                {/*<MenuItem>*/}\r\n                {/*  <ListItemIcon>*/}\r\n                {/*    <ArchiveIcon />*/}\r\n                {/*  </ListItemIcon>*/}\r\n                {/*  <ListItemText primary=\"Архивировать сообщения\" />*/}\r\n                {/*</MenuItem>*/}\r\n                <MenuItem>\r\n                    <ListItemIcon>\r\n                        <NotificationsOffIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Отключить уведомления\"/>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationToolbar;\r\n","import React from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography, Link, Avatar, colors} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    authUser: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        '& $body': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: theme.palette.primary.contrastText\r\n        }\r\n    },\r\n    inner: {\r\n        display: 'flex',\r\n        maxWidth: 500\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    body: {\r\n        backgroundColor: colors.grey[200],\r\n        color: theme.palette.text.primary,\r\n        borderRadius: theme.shape.borderRadius,\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    image: {\r\n        marginTop: theme.spacing(2),\r\n        height: 'auto',\r\n        width: 380,\r\n        maxWidth: '100%'\r\n    },\r\n    footer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nconst ConversationMessage = props => {\r\n    const {message, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(\r\n                classes.root,\r\n                {\r\n                    [classes.authUser]: message.sender.authUser\r\n                },\r\n                className\r\n            )}\r\n        >\r\n            <div className={classes.inner}>\r\n                <Avatar\r\n                    className={classes.avatar}\r\n                    component={RouterLink}\r\n                    src={message.sender.avatar}\r\n                    to=\"/profile/1/timeline\"\r\n                />\r\n                <div>\r\n                    <div className={classes.body}>\r\n                        <div>\r\n                            <Link\r\n                                color=\"inherit\"\r\n                                component={RouterLink}\r\n                                to=\"/profile/1/timeline\"\r\n                                variant=\"h6\"\r\n                            >\r\n                                {message.sender.authUser ? message.sender.name : message.sender.name}\r\n                            </Link>\r\n                        </div>\r\n                        <div className={classes.content}>\r\n                            {message.contentType === 'image' ? (\r\n                                <img\r\n                                    alt=\"Картинка\"\r\n                                    className={classes.image}\r\n                                    src={message.content}\r\n                                />\r\n                            ) : (\r\n                                <Typography\r\n                                    color=\"inherit\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {message.content}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.footer}>\r\n                        <Typography\r\n                            className={classes.time}\r\n                            variant=\"body2\"\r\n                        >\r\n                            {moment(message.created_at).fromNow()}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationMessage;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport ConversationMessage from '../ConversationMessage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        maxHeight: '100%'\r\n    },\r\n    inner: {\r\n        padding: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst ConversationMessages = props => {\r\n    const {messages, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <PerfectScrollbar>\r\n                <div className={classes.inner}>\r\n                    {messages.map(message => {\r\n                        return (\r\n                            <ConversationMessage\r\n                                key={message.id}\r\n                                message={message}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </PerfectScrollbar>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationMessages;\r\n","import React, {useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Avatar,\r\n    Divider,\r\n    IconButton,\r\n    Input,\r\n    Paper,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.white,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    paper: {\r\n        flexGrow: 1,\r\n        marginLeft: theme.spacing(2),\r\n        padding: theme.spacing(0.5, 2)\r\n    },\r\n    input: {\r\n        width: '100%'\r\n    },\r\n    divider: {\r\n        width: 1,\r\n        height: 24\r\n    },\r\n    fileInput: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst ConversationForm = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const fileInputRef = useRef(null);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const sender = {\r\n        avatar: '/images/avatars/avatar_11.png'\r\n    };\r\n\r\n    const handleChange = event => {\r\n        event.persist();\r\n\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const handleAttach = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Avatar\r\n                alt=\"Person\"\r\n                src={sender.avatar}\r\n            />\r\n            <Paper\r\n                className={classes.paper}\r\n                elevation={1}\r\n            >\r\n                <Input\r\n                    className={classes.input}\r\n                    disableUnderline\r\n                    onChange={handleChange}\r\n                    placeholder=\"Напишите что-нибудь...\"\r\n                />\r\n            </Paper>\r\n            <Tooltip title=\"Отправить\">\r\n                <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n                    <SendIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Divider className={classes.divider}/>\r\n            <Tooltip title=\"Сохранить фото\">\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    onClick={handleAttach}\r\n                >\r\n                    <AddPhotoIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Загрузить файл\">\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    onClick={handleAttach}\r\n                >\r\n                    <AttachFileIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <input\r\n                className={classes.fileInput}\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Divider} from '@material-ui/core';\r\n\r\nimport {\r\n    ConversationToolbar,\r\n    ConversationMessages,\r\n    ConversationForm\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: theme.palette.white\r\n    }\r\n}));\r\n\r\nconst ConversationDetails = props => {\r\n    const {conversation, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <ConversationToolbar conversation={conversation}/>\r\n            <Divider/>\r\n            <ConversationMessages messages={conversation.messages}/>\r\n            <Divider/>\r\n            <ConversationForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationDetails;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    inner: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        maxWidth: 400\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 1, 0)\r\n    }\r\n}));\r\n\r\nconst ConversationPlaceholder = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <div className={classes.inner}>\r\n                <img\r\n                    alt=\"Начните диалог\"\r\n                    className={classes.image}\r\n                    src=\"/images/undraw_work_chat_erdt.svg\"\r\n                />\r\n                <Typography\r\n                    className={classes.title}\r\n                    variant=\"h4\"\r\n                >\r\n                    Ваши сообщения\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                    Выберете диалог слева, чтобы начать переписку\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConversationPlaceholder;\r\n","import React, {useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport axios from \"../../utils/axios\";\r\nimport useRouter from \"../../utils/useRouter\"\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n    ConversationList,\r\n    ConversationDetails,\r\n    ConversationPlaceholder\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        '@media (max-width: 863px)': {\r\n            '& $conversationList, & $conversationDetails': {\r\n                flexBasis: '100%',\r\n                width: '100%',\r\n                maxWidth: 'none',\r\n                flexShrink: '0',\r\n                transform: 'translateX(0)'\r\n            }\r\n        }\r\n    },\r\n    openConversion: {\r\n        '@media (max-width: 863px)': {\r\n            '& $conversationList, & $conversationDetails': {\r\n                transform: 'translateX(-100%)'\r\n            }\r\n        }\r\n    },\r\n    conversationList: {\r\n        width: 300,\r\n        flexBasis: 300,\r\n        flexShrink: 0,\r\n        '@media (min-width: 864px)': {\r\n            borderRight: `1px solid ${theme.palette.divider}`\r\n        }\r\n    },\r\n    conversationDetails: {\r\n        flexGrow: 1\r\n    },\r\n    conversationPlaceholder: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst Chat = () => {\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n    const [conversations, setConversations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const fetchConversations = () => {\r\n            axios.get('/api/chat/conversations').then(response => {\r\n                if (mounted) {\r\n                    setConversations(response.data.conversations);\r\n                }\r\n            });\r\n        };\r\n\r\n        fetchConversations();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, []);\r\n\r\n    let selectedConversation;\r\n\r\n    if (router.match.params.id) {\r\n        selectedConversation = conversations.find(\r\n            c => c.id === router.match.params.id\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Page\r\n            className={clsx({\r\n                [classes.root]: true,\r\n                [classes.openConversion]: selectedConversation\r\n            })}\r\n            title=\"Чаты\"\r\n        >\r\n            <ConversationList\r\n                className={classes.conversationList}\r\n                conversations={conversations}\r\n            />\r\n            {selectedConversation ? (\r\n                <ConversationDetails\r\n                    className={classes.conversationDetails}\r\n                    conversation={selectedConversation}\r\n                />\r\n            ) : (\r\n                <ConversationPlaceholder className={classes.conversationPlaceholder}/>\r\n            )}\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"sourceRoot":""}