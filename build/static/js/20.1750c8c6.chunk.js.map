{"version":3,"sources":["redux/reducers/auth.js","redux/reducers/message.js","redux/reducers/profilePosts.js","redux/reducers/index.js","redux/store.js","views/Login/Login.js","redux/actions/types.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","profilePosts","posts","action","type","payload","CREATE_POST","RETRIEVE_POSTS","UPDATE_POST","map","post","_id","DELETE_POST","filter","auth","state","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","message","SET_MESSAGE","CLEAR_MESSAGE","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","props","className","rest","classes","history","useHistory","from","location","pathname","dispatch","useSelector","useDispatch","useState","email","password","creds","setCreds","clsx","Container","component","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","e","preventDefault","signIn","push","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","FormControlLabel","control","Checkbox","disabled","Button","Grid","container","item","xs","Box","mt"],"mappings":"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","file":"static/js/20.1750c8c6.chunk.js","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from \"../actions/types\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n// const user = {\r\n//     _id: null,\r\n//     profilePicture: null,\r\n//     bio: null,\r\n//     coverPicture: null,\r\n//     followers: [],\r\n//     followings: [],\r\n//     isAdmin: false,\r\n//     username: null,\r\n//     email: null,\r\n//     createdAt: null,\r\n//     updatedAt: null,\r\n// }\r\n\r\nconst initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: payload.user,\r\n            };\r\n        case LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_MESSAGE:\r\n            return { message: payload };\r\n\r\n        case CLEAR_MESSAGE:\r\n            return { message: \"\" };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    CREATE_POST,\r\n    RETRIEVE_POSTS,\r\n    UPDATE_POST,\r\n    DELETE_POST,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (posts = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case CREATE_POST:\r\n            return [...posts, payload];\r\n\r\n        case RETRIEVE_POSTS:\r\n            return payload;\r\n\r\n        case UPDATE_POST:\r\n            return posts.map((post) => {\r\n                if (post._id === payload._id) {\r\n                    return {\r\n                        ...post,\r\n                        ...payload,\r\n                    };\r\n                } else {\r\n                    return post;\r\n                }\r\n            });\r\n\r\n        case DELETE_POST:\r\n            return posts.filter(({ _id }) => _id !== payload._id);\r\n\r\n        // case DELETE_ALL_POSTS:\r\n        //     return [];\r\n\r\n        default:\r\n            return posts;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport profilePosts from \"./profilePosts\";\r\n\r\nexport default combineReducers({\r\n    profilePosts,\r\n    auth,\r\n    message,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, {useRef, useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Redirect, useHistory} from \"react-router\";\r\nimport {login} from \"../../redux/actions/auth\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearMessage} from \"../../redux/actions/messages\";\r\nimport {signIn} from \"../../store/actions/authActions\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Копирайт © '}\r\n            <Link color=\"inherit\" href=\"http://localhost:3000/\">\r\n                Фэт\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = props => {\r\n\r\n    const {className, ...rest} = props;\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n    const { from } = props.location.state || { from: {pathname: '/' } }\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [creds, setCreds] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signIn(creds.email, creds.password));\r\n        setCreds({ email: \"\", password: \"\" });\r\n        history.push('/');\r\n    };\r\n\r\n    return(\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Авторизация\r\n                    </Typography>\r\n                    <Typography align=\"center\">Чтобы посмотреть эту страничку: {from.pathname}, тебе надо авторизоваться</Typography>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Эмейл\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            value={creds.email}\r\n                            onChange={(e) => setCreds({ ...creds, email: e.target.value })}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Пароль\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={creds.password}\r\n                            onChange={(e) => setCreds({ ...creds, password: e.target.value })}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Запомнить меня\"\r\n                            disabled\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Забыли пароль?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/auth/register\" variant=\"body2\">\r\n                                    Нету аккаунта? Зарегистрируйтесь\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={8}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","//auth\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\n//profile\r\nexport const SET_AVATAR = \"SET_AVATAR\"; // аватарка профиля\r\nexport const SET_COVER = \"SET_COVER\"; // картинка на бекграунд верха страницы профиля\r\n\r\n//profile posts\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const RETRIEVE_POSTS = \"RETRIEVE_POSTS\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n"],"sourceRoot":""}