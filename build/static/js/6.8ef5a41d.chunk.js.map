{"version":3,"sources":["views/ProjectDetails/components/Activities/components/Activity/Activity.js","views/ProjectDetails/components/Activities/Activities.js","views/ProjectDetails/components/Files/components/FileCard/FileCard.js","views/ProjectDetails/components/Files/Files.js","views/ProjectDetails/components/Header/components/Application/Application.js","views/ProjectDetails/components/Header/Header.js","components/Markdown/Markdown.js","views/ProjectDetails/components/Overview/components/Brief/Brief.js","views/ProjectDetails/components/Overview/components/Statistics/Statistics.js","views/ProjectDetails/components/Overview/components/Holder/Holder.js","views/ProjectDetails/components/Overview/components/Members/Members.js","components/GenericMoreButton/GenericMoreButton.js","views/ProjectDetails/components/Overview/components/ChartRadar.js","views/ProjectDetails/components/Overview/components/ChartLine.js","views/ProjectDetails/components/Overview/Overview.js","components/ReviewStars/ReviewStars.js","views/ProjectDetails/components/Diet/components/ItemsTable/ItemsTable.js","views/ProjectDetails/components/Diet/components/ProteinsFatsCarbohydrates/components/Chart/Chart.js","views/ProjectDetails/components/Diet/components/ProteinsFatsCarbohydrates/ProteinsFatsCarbohydrates.js","views/ProjectDetails/components/Diet/components/General/General.js","views/ProjectDetails/components/Calendar/ProjectCalendar/components/EventTable/components/TablePaginationActions.js","views/ProjectDetails/components/Calendar/ProjectCalendar/components/EventTable/components/GlobalFilter.js","views/ProjectDetails/components/Calendar/ProjectCalendar/components/EventTable/components/TableToolbar.js","views/ProjectDetails/components/Calendar/ProjectCalendar/components/EventTable/EventTable.js","views/ProjectDetails/components/Calendar/ProjectCalendar/components/AddEditEvent/AddEditEvent.js","store/actions/eventActions.js","views/ProjectDetails/components/Calendar/ProjectCalendar/components/Toolbar/Toolbar.js","views/ProjectDetails/components/Calendar/ProjectCalendar/ProjectCalendar.js","views/ProjectDetails/components/Diet/Diet.js","views/ProjectDetails/components/Trainings/components/General/components/Intensity.js","views/ProjectDetails/components/Trainings/components/General/General.js","views/ProjectDetails/components/Trainings/components/TrainingsTable.js","views/ProjectDetails/components/Trainings/Trainings.js","views/ProjectDetails/components/Tasks/Tasks.js","views/ProjectDetails/components/Workouts/Workouts.js","views/ProjectDetails/ProjectDetails.js","store/actions/userActions.js","utils/bytesToSize.js","store/actions/usersListActions.js","components/FilesDropzone/FilesDropzone.js"],"names":["useStyles","makeStyles","theme","root","display","alignItems","card","marginLeft","spacing","flexGrow","padding","date","flexShrink","avatarBlue","backgroundImage","gradients","blue","avatarGreen","green","avatarOrange","orange","avatarIndigo","indigo","Activity","props","activity","className","rest","classes","avatars","upload_file","Avatar","join_team","price_change","contest_created","to","subject_type","clsx","action_type","Card","Typography","variant","Link","color","component","RouterLink","subject","action_desc","moment","created_at","fromNow","title","marginBottom","group","marginTop","position","content","height","width","top","left","backgroundColor","palette","divider","Activities","activities","todayItems","lastWeekItems","isSame","push","map","id","media","placeholder","colors","blueGrey","justifyContent","insertDriveFileIcon","fontSize","actions","getAppIcon","marignRight","menu","maxWidth","files","header","margin","helperText","textAlign","marginRight","author","avatar","grey","applyButton","white","Application","open","onClose","onApply","useState","value","setValue","Dialog","align","gutterBottom","subtitle","TextField","autoFocus","textField","FormHelperTextProps","fullWidth","length","label","multiline","onChange","event","persist","target","rows","alt","src","profilePicture","getInitials","name","bio","Button","onClick","shareButton","breakpoints","down","shareIcon","likedButton","red","dislikedButton","Header","project","dispatch","useDispatch","authUserId","useSelector","state","auth","_id","members","membering","setMembering","some","userId","isMembering","setIsMembering","memberingHandler","memberingProject","err","openApplication","setOpenApplication","handleApplicationClose","Grid","container","justify","item","Label","typography","h1","h2","h3","h4","h5","h6","subtitle1","border","link","textDecoration","charts","up","paddingBottom","paddingTop","listItem","tags","Holder","projectId","useEffect","getProjectById","getProfileById","projectById","userById","CardHeader","disableTypography","subheader","CardContent","List","ListItem","disableGutters","startDate","format","endDate","generateTagsWithId","text","tag","generateRandomColor","nothing","manageButton","Members","titleTypographyProps","member","ListItemAvatar","ListItemText","primary","primaryTypographyProps","secondary","followers","CardActions","disabled","GenericMoreButton","moreRef","useRef","openMenu","setOpenMenu","Tooltip","IconButton","ref","size","Menu","anchorEl","current","anchorOrigin","vertical","horizontal","paper","transformOrigin","MenuItem","ListItemIcon","memo","options","scale","ticks","beginAtZero","r","angleLines","suggestedMin","suggestedMax","chartContainer","statsContainer","statsItem","flexDirection","borderRight","ChartRadar","desc","data","action","Divider","ChartLine","deliverables","description","chartsGroup","chart1","chart2","Overview","increase","usersAnthropometry","anthropometry","lg","xl","xs","editorState","EditorState","createWithContent","convertFromRaw","JSON","parse","readOnly","labels","datasets","borderColor","borderWidth","direction","starIcon","starFilledIcon","amber","starBorderIcon","icon","ReviewStars","starCount","starNodes","i","key","uuidv4","starNode","defaultProps","importance","inner","minWidth","nameCell","chart","bullet","transform","pos","search","borderRadius","shape","fade","common","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","paddingLeft","paddingRight","highlight","type","main","lighten","light","dark","flex","outline","boxShadow","shadows","field","cancelButton","confirmButton","table","AddEditEvent","forwardRef","onDelete","onCancel","onAdd","onEdit","editMode","defaultEvent","allDay","start","toDate","end","values","setValues","mode","handleFieldChange","e","checked","handleDelete","axios","delete","url","setHeaders","then","catch","error","console","log","toast","response","POSITION","BOTTOM_RIGHT","deleteEvent","titleMode","FormControlLabel","control","Switch","defaultValue","newEvent","getState","authorId","post","setProjectHeaders","edge","updatedEvent","put","updateEvent","addEvent","Toolbar","view","onDatePrev","titlePage","onDateNext","onEventAdd","onViewChange","onDateToday","viewOptions","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","ButtonGroup","ArrowBack","ArrowForward","Hidden","smDown","viewOption","Icon","body2","body1","subtitle2","fontWeight","contrastText","opacity","ProjectCalendar","currentProjectId","get","trainingsEventsList","dietEventsList","getProjectDietEvents","eventsList","calendarRef","useTheme","mobileDevice","useMediaQuery","setView","setDate","events","setEvents","eventModal","setEventModal","calendarApi","getApi","newView","changeView","handleModalClose","next","getDate","prev","today","locale","schedulerLicenseKey","allDayMaintainDuration","defaultDate","defaultView","droppable","editable","eventClick","info","selected","find","eventResizableFromStart","headerToolbar","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","rerenderDelay","selectable","weekends","Modal","filter","Diet","projectAuthorId","slider","dates","pfc","intensity","Workouts","tabs","alert","ProjectDetails","match","history","params","tab","getMembers","usersList","appState","t","Page","Tabs","scrollButtons","Tab","uid","unfollowUser","authedUser","currentUser","onSuccess","onError","a","success","payload","followUser","updateUser","updatedUser","user","bytes","decimals","k","dm","sizes","Math","floor","parseFloat","pow","toFixed","getFriends","friendsList","membersList","dropZone","flexWrap","cursor","dragActive","image","list","maxHeight","FilesDropzone","setFiles","handleDrop","useCallback","acceptedFiles","concat","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","underline","file","bytesToSize"],"mappings":"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","file":"static/js/6.8ef5a41d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Card, Typography, Link } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\r\n\r\nimport gradients from \"../../../../../../utils/gradients\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  card: {\r\n    marginLeft: theme.spacing(2),\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    padding: theme.spacing(2),\r\n    alignItems: 'center'\r\n  },\r\n  date: {\r\n    marginLeft: 'auto',\r\n    flexShrink: 0\r\n  },\r\n  avatarBlue: {\r\n    backgroundImage: gradients.blue\r\n  },\r\n  avatarGreen: {\r\n    backgroundImage: gradients.green\r\n  },\r\n  avatarOrange: {\r\n    backgroundImage: gradients.orange\r\n  },\r\n  avatarIndigo: {\r\n    backgroundImage: gradients.indigo\r\n  }\r\n}));\r\n\r\nconst Activity = props => {\r\n  const { activity, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const avatars = {\r\n    upload_file: (\r\n      <Avatar className={classes.avatarBlue}>\r\n        <GetAppIcon />\r\n      </Avatar>\r\n    ),\r\n    join_team: (\r\n      <Avatar className={classes.avatarOrange}>\r\n        <PersonAddIcon />\r\n      </Avatar>\r\n    ),\r\n    price_change: (\r\n      <Avatar className={classes.avatarGreen}>\r\n        <AttachMoneyIcon />\r\n      </Avatar>\r\n    ),\r\n    contest_created: (\r\n      <Avatar className={classes.avatarIndigo}>\r\n        <DashboardIcon />\r\n      </Avatar>\r\n    )\r\n  };\r\n\r\n  const to =\r\n    activity.subject_type === 'user'\r\n      ? '/profile/1/timeline'\r\n      : '/projects/1/overview';\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {avatars[activity.action_type]}\r\n      <Card className={classes.card}>\r\n        <Typography variant=\"body1\">\r\n          <Link\r\n            color=\"textPrimary\"\r\n            component={RouterLink}\r\n            to={to}\r\n            variant=\"h6\"\r\n          >\r\n            {activity.subject}\r\n          </Link>{' '}\r\n          {activity.action_desc}\r\n        </Typography>\r\n        <Typography\r\n          className={classes.date}\r\n          variant=\"body2\"\r\n        >\r\n          {moment(activity.created_at).fromNow()}\r\n        </Typography>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Activity;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core';\r\n\r\nimport {Activity} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    title: {\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    group: {\r\n        '& + &': {\r\n            marginTop: theme.spacing(4)\r\n        }\r\n    },\r\n    activity: {\r\n        position: 'relative',\r\n        '& + &': {\r\n            marginTop: theme.spacing(3),\r\n            '&:before': {\r\n                position: 'absolute',\r\n                content: '\" \"',\r\n                height: 20,\r\n                width: 1,\r\n                top: -20,\r\n                left: 20,\r\n                backgroundColor: theme.palette.divider\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst Activities = props => {\r\n    const {activities, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const todayItems = [];\r\n    const lastWeekItems = [];\r\n\r\n    for (const activity of activities) {\r\n        moment(activity.created_at).isSame(moment(), 'day')\r\n            ? todayItems.push(activity)\r\n            : lastWeekItems.push(activity);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Typography\r\n                className={classes.title}\r\n                variant=\"h3\"\r\n            >\r\n                Сегодня\r\n            </Typography>\r\n            <div className={classes.group}>\r\n                {todayItems.map(activity => (\r\n                    <Activity\r\n                        activity={activity}\r\n                        className={classes.activity}\r\n                        key={activity.id}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className={classes.group}>\r\n                <Typography\r\n                    className={classes.title}\r\n                    variant=\"h3\"\r\n                >\r\n                    Вчера\r\n                </Typography>\r\n                {lastWeekItems.map(activity => (\r\n                    <Activity\r\n                        activity={activity}\r\n                        className={classes.activity}\r\n                        key={activity.id}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Activities;\r\n","import React, { useRef, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  IconButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport bytesToSize from \"../../../../../../utils/bytesToSize\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  media: {\r\n    height: 240\r\n  },\r\n  placeholder: {\r\n    height: 240,\r\n    backgroundColor: colors.blueGrey[50],\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  insertDriveFileIcon: {\r\n    height: theme.spacing(6),\r\n    width: theme.spacing(6),\r\n    fontSize: theme.spacing(6)\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  actions: {\r\n    justifyContent: 'center'\r\n  },\r\n  getAppIcon: {\r\n    marignRight: theme.spacing(1)\r\n  },\r\n  menu: {\r\n    width: 250,\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nconst FileCard = props => {\r\n  const { file, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const moreRef = useRef(null);\r\n\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {file.mimeType.includes('image/') ? (\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={file.url}\r\n        />\r\n      ) : (\r\n        <div className={classes.placeholder}>\r\n          <InsertDriveFileIcon className={classes.insertDriveFileIcon} />\r\n        </div>\r\n      )}\r\n      <CardContent className={classes.content}>\r\n        <div>\r\n          <Typography variant=\"h5\">{file.name}</Typography>\r\n          <Typography variant=\"subtitle2\">{bytesToSize(file.size)}</Typography>\r\n        </div>\r\n        <div>\r\n          <Tooltip title=\"More options\">\r\n            <IconButton\r\n              edge=\"end\"\r\n              onClick={handleMenuOpen}\r\n              ref={moreRef}\r\n              size=\"small\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button>\r\n          <GetAppIcon className={classes.getAppIcon} />\r\n          Download\r\n        </Button>\r\n      </CardActions>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        classes={{ paper: classes.menu }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        <MenuItem divider>\r\n          <ListItemIcon>\r\n            <EditIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Rename\" />\r\n        </MenuItem>\r\n        <MenuItem divider>\r\n          <ListItemIcon>\r\n            <DeleteIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Delete\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <ArchiveIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Archive\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default FileCard;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\n\r\nimport FilesDropzone from \"../../../../components/FilesDropzone\";\r\nimport { FileCard } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  files: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Files = props => {\r\n  const { files, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardContent>\r\n          <FilesDropzone />\r\n        </CardContent>\r\n      </Card>\r\n      <Grid\r\n        className={classes.files}\r\n        container\r\n        spacing={3}\r\n      >\r\n        {files.map(file => (\r\n          <Grid\r\n            item\r\n            key={file.id}\r\n            lg={4}\r\n            md={4}\r\n            sm={6}\r\n            xs={12}\r\n          >\r\n            <FileCard file={file} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Files;\r\n","import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Dialog,\r\n    TextField,\r\n    Typography,\r\n    colors\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from \"../../../../../../utils/getInitials\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: 960\r\n    },\r\n    header: {\r\n        padding: theme.spacing(3),\r\n        maxWidth: 720,\r\n        margin: '0 auto'\r\n    },\r\n    content: {\r\n        padding: theme.spacing(0, 2),\r\n        maxWidth: 720,\r\n        margin: '0 auto'\r\n    },\r\n    helperText: {\r\n        textAlign: 'right',\r\n        marginRight: 0\r\n    },\r\n    author: {\r\n        margin: theme.spacing(4, 0),\r\n        display: 'flex'\r\n    },\r\n    avatar: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        backgroundColor: colors.grey[100],\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    applyButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: colors.green[600],\r\n        '&:hover': {\r\n            backgroundColor: colors.green[900]\r\n        }\r\n    }\r\n}));\r\n\r\nconst Application = props => {\r\n    const {author, open, onClose, onApply, className, ...rest} = props;\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleChange = event => {\r\n        event.persist();\r\n\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"lg\"\r\n            onClose={onClose}\r\n            open={open}\r\n        >\r\n            <div\r\n                {...rest}\r\n                className={clsx(classes.root, className)}\r\n            >\r\n                <div className={classes.header}>\r\n                    <Typography\r\n                        align=\"center\"\r\n                        className={classes.title}\r\n                        gutterBottom\r\n                        variant=\"h3\"\r\n                    >\r\n                        The project owner requires an introduction\r\n                    </Typography>\r\n                    <Typography\r\n                        align=\"center\"\r\n                        className={classes.subtitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        Write down a short note with your application regarding why you\r\n                        think you'd be a good fit for this position.\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.content}>\r\n                    <TextField\r\n                        autoFocus\r\n                        className={classes.textField}\r\n                        FormHelperTextProps={{classes: {root: classes.helperText}}}\r\n                        fullWidth\r\n                        helperText={`${200 - value.length} characters left`}\r\n                        label=\"Short Note\"\r\n                        multiline\r\n                        onChange={handleChange}\r\n                        placeholder=\"What excites you about this project?\"\r\n                        rows={5}\r\n                        value={value}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <div className={classes.author}>\r\n                        <Avatar\r\n                            alt=\"Author\"\r\n                            className={classes.avatar}\r\n                            src={author.profilePicture}\r\n                        >\r\n                            {getInitials(author.name)}\r\n                        </Avatar>\r\n                        <div>\r\n                            <Typography variant=\"h3\">\r\n                                {author.name}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\">\r\n                                {author.bio}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <Button\r\n                        className={classes.applyButton}\r\n                        onClick={onApply}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Apply for a role\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\n\r\nexport default Application;\r\n","import React, {useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography, Grid, Button, colors, Tooltip, IconButton} from '@material-ui/core';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nimport Label from \"../../../../components/Label\";\r\nimport {Application} from './components';\r\nimport {getProfileById} from \"../../../../store/actions/userActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport {memberingProject} from \"../../../../store/actions/projectActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    label: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    shareButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    },\r\n    shareIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    applyButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: colors.green[600],\r\n        '&:hover': {\r\n            backgroundColor: colors.green[900]\r\n        }\r\n    },\r\n    likedButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: colors.red[600],\r\n        '&:hover': {\r\n            backgroundColor: colors.red[900]\r\n        }\r\n    },\r\n    dislikedButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: colors.blueGrey[400],\r\n        '&:hover': {\r\n            backgroundColor: colors.red[400]\r\n        }\r\n    },\r\n}));\r\n\r\nconst Header = props => {\r\n    const { project, author, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const authUserId = useSelector(state => state.auth._id)\r\n\r\n    function likedByUser(userId) {\r\n        return userId === authUserId;\r\n    }\r\n\r\n    const [membering, setMembering] = useState(props.project.members.length);\r\n    // если переходишь на /projects, то length от undefined\r\n    const [isMembering, setIsMembering] = useState(props.project.members.some(likedByUser));\r\n\r\n    const memberingHandler = () => {\r\n        try {\r\n            dispatch(memberingProject(project._id, authUserId))\r\n        } catch (err) {\r\n        }\r\n        setMembering(isMembering ? membering - 1 : membering + 1);\r\n        setIsMembering(!isMembering);\r\n    };\r\n\r\n    const [openApplication, setOpenApplication] = useState(false);\r\n\r\n    const handleApplicationOpen = () => {\r\n        setOpenApplication(true);\r\n    };\r\n\r\n    const handleApplicationClose = () => {\r\n        setOpenApplication(false);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Grid\r\n                alignItems=\"flex-end\"\r\n                container\r\n                justify=\"space-between\"\r\n                spacing={3}\r\n            >\r\n                <Grid item>\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        gutterBottom\r\n                        variant=\"overline\"\r\n                    >\r\n                        Просмотр проекта\r\n                    </Typography>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        gutterBottom\r\n                        variant=\"h3\"\r\n                    >\r\n                        {props.project.title}\r\n                    </Typography>\r\n                    <Label\r\n                        className={classes.label}\r\n                        color={colors.green[600]}\r\n                        variant=\"outlined\"\r\n                    >\r\n                        Популярно\r\n                    </Label>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        className={classes.shareButton}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <ShareIcon className={classes.shareIcon}/>\r\n                        Поделится\r\n                    </Button>\r\n                    {isMembering ? (\r\n                        <Button variant=\"contained\" className={classes.likedButton} onClick={memberingHandler}>\r\n                            <FavoriteIcon/>\r\n                            Вы участвуете в проекте\r\n                        </Button>\r\n                    ) : (\r\n                        <Button variant=\"outlined\" className={classes.dislikedButton} onClick={memberingHandler}>\r\n                            <FavoriteBorderIcon/>\r\n                            Подписаться на проект\r\n                        </Button>\r\n                    )}\r\n                    {/*<Button*/}\r\n                    {/*    className={classes.applyButton}*/}\r\n                    {/*    onClick={handleApplicationOpen}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Вступить в проект*/}\r\n                    {/*</Button>*/}\r\n                </Grid>\r\n            </Grid>\r\n            <Application\r\n                author={author}\r\n                onApply={handleApplicationClose}\r\n                onClose={handleApplicationClose}\r\n                open={openApplication}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Header;\r\n","import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport Prism from 'prismjs';\r\nimport ReactMarkdown from 'react-markdown/with-html';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {colors} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& h1': {\r\n            ...theme.typography.h1,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& h2': {\r\n            ...theme.typography.h2,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& h3': {\r\n            ...theme.typography.h3,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& h4': {\r\n            ...theme.typography.h4,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& h5': {\r\n            ...theme.typography.h5,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& h6': {\r\n            ...theme.typography.h6,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& p': {\r\n            ...theme.typography.subtitle1,\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n        '& ul': {\r\n            marginLeft: theme.spacing(3),\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n        '& ol': {\r\n            marginLeft: theme.spacing(3),\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n        '& li': {\r\n            ...theme.typography.subtitle1,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        '& hr': {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            backgroundColor: colors.grey[300],\r\n            border: 0,\r\n            height: 1\r\n        },\r\n        '& a': {\r\n            color: theme.palette.link,\r\n            '&:hover': {\r\n                textDecoration: 'underline'\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst Markdown = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={clsx(classes.root, className)}>\r\n            <ReactMarkdown {...rest} />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Markdown;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\n\r\nimport Markdown from \"../../../../../../components/Markdown\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Brief = props => {\r\n  const { brief, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Markdown source={brief} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default Brief;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Card, CardContent} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    charts: {\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        }\r\n    }\r\n}));\r\n\r\nconst Statistics = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardContent>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default Statistics;\r\n","import React, {useEffect} from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    List,\r\n    ListItem,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from \"../../../../../../utils/getInitials\";\r\nimport Label from \"../../../../../../components/Label\";\r\nimport {generateRandomColor} from \"../../../../../../utils/generateRandomColor\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProjectById} from \"../../../../../../store/actions/projectActions\";\r\nimport {getProfileById} from \"../../../../../../store/actions/userActions\";\r\nimport {generateTagsWithId} from \"../../../../../../utils/generateTagsWithId\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    header: {\r\n        paddingBottom: 0\r\n    },\r\n    content: {\r\n        paddingTop: 0\r\n    },\r\n    listItem: {\r\n        padding: theme.spacing(2, 0),\r\n        justifyContent: 'space-between'\r\n    },\r\n    tags: {\r\n        padding: theme.spacing(0, 1, 0, 1),\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(0.5)\r\n        }\r\n    },\r\n}));\r\n\r\nconst Holder = props => {\r\n    const {projectId, userId, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProjectById(projectId));\r\n    }, [projectId])\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileById(userId));\r\n    }, [userId])\r\n\r\n    const project = useSelector(state => state.projectById);\r\n    const author = useSelector(state => state.userById);\r\n\r\n    return (\r\n        <>\r\n            {(project._id && author.name !== null) ? (\r\n                <>\r\n                    <Card\r\n                        {...rest}\r\n                        className={clsx(classes.root, className)}\r\n                    >\r\n                        <CardHeader\r\n                            avatar={\r\n                                <Avatar\r\n                                    alt=\"Автор\"\r\n                                    className={classes.avatar}\r\n                                    component={RouterLink}\r\n                                    src={author.profilePicture}\r\n                                    to={`/profile/${author._id}/wall`}\r\n                                >\r\n                                    {getInitials(author.name)}\r\n                                </Avatar>\r\n                            }\r\n                            className={classes.header}\r\n                            disableTypography\r\n                            subheader={\r\n                                <Typography\r\n                                    component={RouterLink}\r\n                                    to={`/profile/${author._id}/wall`}\r\n                                    variant=\"h5\"\r\n                                >\r\n                                    {author.name}\r\n                                </Typography>\r\n                            }\r\n                            title={\r\n                                <Typography\r\n                                    display=\"block\"\r\n                                    variant=\"overline\"\r\n                                >\r\n                                    Автор проекта\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                        <CardContent className={classes.content}>\r\n                            <List>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    disableGutters\r\n                                    divider\r\n                                >\r\n                                    <Typography variant=\"subtitle2\">Дата старта проекта</Typography>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(project.startDate).format('DD MMM YYYY')}\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    disableGutters\r\n                                    divider\r\n                                >\r\n                                    <Typography variant=\"subtitle2\">Дата окончания проекта</Typography>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(project.endDate).format('DD MMM YYYY')}\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    disableGutters\r\n                                    divider\r\n                                >\r\n                                    <Typography variant=\"subtitle2\">Участников</Typography>\r\n                                    <Typography variant=\"h6\">\r\n                                        {project.members.length}\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    disableGutters\r\n                                    divider\r\n                                >\r\n                                    <div className={classes.tags}>\r\n                                        {generateTagsWithId(project.tags.text).map(tag => (\r\n                                            <Label\r\n                                                color={generateRandomColor()}\r\n                                                key={tag.id}\r\n                                            >\r\n                                                {tag.text}\r\n                                            </Label>\r\n                                        ))}\r\n                                    </div>\r\n                                </ListItem>\r\n                                {/*<ListItem*/}\r\n                                {/*    className={classes.listItem}*/}\r\n                                {/*    disableGutters*/}\r\n                                {/*    divider*/}\r\n                                {/*>*/}\r\n                                {/*    <Typography variant=\"subtitle2\">Теги</Typography>*/}\r\n                                {/*    <Label color={generateRandomColor()}>*/}\r\n                                {/*        {project.tags.text.map((text) => {text + ' '})}*/}\r\n                                {/*    </Label>*/}\r\n                                {/*</ListItem>*/}\r\n                                <ListItem\r\n                                    className={classes.listItem}\r\n                                    disableGutters\r\n                                    divider\r\n                                >\r\n                                    <Typography variant=\"subtitle2\">Последнее обновление</Typography>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(project.date).format('DD MMM YYYY')}\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </>\r\n            ) : (\r\n                <div>Загрузка...</div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Holder;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    colors, Typography\r\n} from '@material-ui/core';\r\n\r\nimport getInitials from \"../../../../../../utils/getInitials\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    header: {\r\n        paddingBottom: 0\r\n    },\r\n    content: {\r\n        paddingTop: 0\r\n    },\r\n    nothing: {},\r\n    actions: {\r\n        backgroundColor: colors.grey[50]\r\n    },\r\n    manageButton: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst Members = props => {\r\n    const {members, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardHeader\r\n                className={classes.header}\r\n                title=\"Участники проекта\"\r\n                titleTypographyProps={{\r\n                    variant: 'overline'\r\n                }}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <List>\r\n                    {members.length > 0 ? members.map(member => (\r\n                        <ListItem\r\n                            disableGutters\r\n                            key={member._id}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    alt=\"Author\"\r\n                                    className={classes.avatar}\r\n                                    src={member.profilePicture}\r\n                                >\r\n                                    {getInitials(member.name)}\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={member.name}\r\n                                primaryTypographyProps={{variant: 'h6'}}\r\n                                secondary={`${member.followers.length - 1} подписчиков`}\r\n                                // не знаю нужна ли эта информация здесь про подписчиков, в будущем может удалю,\r\n                                // щас пусть пространство хоть занимает\r\n                            />\r\n                        </ListItem>\r\n                    )) : (\r\n                        <div className={classes.nothing}>\r\n                            <Typography variant=\"body1\">Пока нет участников...</Typography>\r\n                        </div>\r\n                    )}\r\n                </List>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n                <Button disabled className={classes.manageButton}>Посмотреть всех</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default Members;\r\n","import React, { Fragment, useRef, useState, memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Tooltip,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({}));\r\n\r\nconst GenericMoreButton = props => {\r\n  const classes = useStyles();\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tooltip title=\"More options\">\r\n        <IconButton\r\n          {...props}\r\n          onClick={handleMenuOpen}\r\n          ref={moreRef}\r\n          size=\"small\"\r\n        >\r\n          <MoreIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        classes={{ paper: classes.menu }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <GetAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Импорт\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <FileCopyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Скопировать в буфер обмена\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <PictureAsPdfIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Экспортировать в PDF\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <PrintIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Напечатать\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <AchiveIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Архивировать\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default memo(GenericMoreButton);\r\n","import React from 'react';\r\nimport { Radar } from 'react-chartjs-2';\r\nimport {Card, CardContent, CardHeader, Divider} from \"@material-ui/core\";\r\nimport GenericMoreButton from \"../../../../../components/GenericMoreButton/GenericMoreButton\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst options = {\r\n    scale: {\r\n        ticks: {\r\n            beginAtZero: true,\r\n        },\r\n        r: {\r\n            angleLines: {\r\n                display: false\r\n            },\r\n            suggestedMin: 0,\r\n            suggestedMax: 130\r\n        }\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0,\r\n        '&:last-child': {\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    chartContainer: {\r\n        padding: theme.spacing(2),\r\n        height: '100%',\r\n    },\r\n    statsContainer: {\r\n        display: 'flex'\r\n    },\r\n    statsItem: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(3, 2),\r\n        '&:not(:last-of-type)': {\r\n            borderRight: `1px solid ${theme.palette.divider}`\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst ChartRadar = props => {\r\n\r\n    const {title, desc, projectId, userId, data, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n        >\r\n            <CardHeader\r\n                action={<GenericMoreButton/>}\r\n                title={props.title}\r\n                subheader={props.desc}\r\n            />\r\n            <Divider/>\r\n            <CardContent className={classes.content}>\r\n                <div className={classes.chartContainer}>\r\n                    <Radar data={props.data} options={options}/>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChartRadar;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {Card, CardContent, CardHeader, Divider} from \"@material-ui/core\";\r\nimport GenericMoreButton from \"../../../../../components/GenericMoreButton/GenericMoreButton\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst options = {\r\n    scale: {\r\n        ticks: {\r\n            beginAtZero: true,\r\n        },\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0,\r\n        '&:last-child': {\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    chartContainer: {\r\n        padding: theme.spacing(2),\r\n        height: '100%',\r\n    },\r\n    statsContainer: {\r\n        display: 'flex'\r\n    },\r\n    statsItem: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(3, 2),\r\n        '&:not(:last-of-type)': {\r\n            borderRight: `1px solid ${theme.palette.divider}`\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst ChartLine = props => {\r\n\r\n    const {title, desc, projectId, userId, data, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n        >\r\n            <CardHeader\r\n                action={<GenericMoreButton/>}\r\n                title={props.title}\r\n                subheader={props.desc}\r\n            />\r\n            <Divider/>\r\n            <CardContent className={classes.content}>\r\n                <div className={classes.chartContainer}>\r\n                    <Line data={props.data} options={options}/>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChartLine;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, Card, CardContent} from '@material-ui/core';\r\n\r\nimport {ChartLine, ChartRadar, Holder, Members} from './components'\r\nimport {convertFromRaw, Editor, EditorState} from \"draft-js\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    deliverables: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    members: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    description: {\r\n        padding: theme.spacing(2, 2, 1, 3),\r\n    },\r\n    chartsGroup: {\r\n        display: \"flex\",\r\n    },\r\n    chart1: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    chart2: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Overview = props => {\r\n    const {members, projectId, userId, description, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    let increase = {\r\n        increaseNeck: '1',\r\n        increaseShoulders: '2',\r\n        increaseChest: '5',\r\n        increaseWaist: '4',\r\n        increaseBooty: '6',\r\n        increaseLeftBiceps: '2',\r\n        increaseRightBiceps: '3',\r\n        increaseLeftHip: '5',\r\n        increaseRightHip: '6',\r\n        increaseLeftWrist: '0',\r\n        increaseRightWrist: '0',\r\n        increaseLeftForearm: '3',\r\n        increaseRightForearm: '2',\r\n        increaseLeftCalf: '3',\r\n        increaseRightcCalf: '4',\r\n    }\r\n\r\n    let usersAnthropometry = {\r\n        usersNeck: '40',\r\n        usersShoulders: '120',\r\n        usersChest: '110',\r\n        usersWaist: '80',\r\n        usersBooty: '95',\r\n        usersLeftBiceps: '37',\r\n        usersRightBiceps: '38',\r\n        usersLeftHip: '59',\r\n        usersRightHip: '60',\r\n        usersLeftWrist: '20',\r\n        usersRightWrist: '20',\r\n        usersLeftForearm: '30',\r\n        usersRightForearm: '28',\r\n        usersLeftCalf: '38',\r\n        usersRightCalf: '39',\r\n    }\r\n\r\n    let anthropometry = `\r\n    Шея: ${usersAnthropometry.usersNeck} + '${increase.increaseNeck}',\r\n    Плечи: ${usersAnthropometry.usersShoulders} + '${increase.increaseShoulders}', \r\n    Грудь: ${usersAnthropometry.usersChest} + '${increase.increaseChest}',\r\n    Талия: ${usersAnthropometry.usersWaist} + '${increase.increaseWaist}',\r\n    Таз: ${usersAnthropometry.usersBooty} + '${increase.increaseBooty}',\r\n    Левый бицепс: ${usersAnthropometry.usersLeftBiceps} + '${increase.increaseLeftBiceps}',\r\n    Правый бицепс: ${usersAnthropometry.usersRightBiceps} + '${increase.increaseRightBiceps}',\r\n    Левое бедро: ${usersAnthropometry.usersLeftHip} + '${increase.increaseLeftHip}',\r\n    Правое бедро: ${usersAnthropometry.usersRightHip} + '${increase.increaseRightHip}',\r\n    Левая кисть: ${usersAnthropometry.usersLeftWrist} + '${increase.increaseLeftWrist}',\r\n    Правая кисть: ${usersAnthropometry.usersRightWrist} + '${increase.increaseRightWrist}',\r\n    Левое предплечье: ${usersAnthropometry.usersLeftForearm} + '${increase.increaseLeftForearm}',\r\n    Правое предплечье: ${usersAnthropometry.usersRightForearm} + '${increase.increaseRightForearm}',\r\n    Левая икроножная: ${usersAnthropometry.usersLeftCalf} + '${increase.increaseLeftCalf}',\r\n    Правая икроножная: ${usersAnthropometry.usersRightCalf} + '${increase.increaseRightcCalf}',\r\n    `\r\n\r\n    const anthropometryData = {\r\n        labels: ['Шея', 'Плечи', 'Грудь', 'Талия', 'Таз', 'Левый бицепс',\r\n            'Правое предплечье', 'Левое предплечье','Правый бицепс', 'Правая кисть', 'Левая кисть',\r\n            'Правое бедро', 'Левое бедро', 'Правая икра', 'Левая икра'],\r\n        datasets: [\r\n            {\r\n                label: 'Ваши объёмы на старте проекта',\r\n                data: [39, 120, 105, 88, 95, 38, 38, 33, 33, 19, 19, 58, 60, 38, 37],\r\n                backgroundColor: 'rgba(99,138,255,0.91)',\r\n                borderColor: 'rgba(99,120,255,0.15)',\r\n                borderWidth: 1,\r\n            },\r\n            {\r\n                label: 'Средняя прибавка по завершению',\r\n                data: [41, 125, 110, 90, 100, 40, 39, 34, 33, 19, 19, 61, 63, 40, 39],\r\n                backgroundColor: 'rgb(255,99,130)',\r\n                borderColor: 'rgba(255,99,99,0.15)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    let dynamicWeightData = {\r\n        labels: ['1 ', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\r\n        datasets: [\r\n            {\r\n                label: 'Средняя прибавка по весу',\r\n                data: [70, 72, 72.4, 73.3, 74, 73.8, 76, 78, 80.5, 81, 80, 80],\r\n                backgroundColor: 'rgb(255,99,130)',\r\n                borderColor: 'rgba(255,99,99,0.15)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    let completeProjectData = {\r\n        labels: ['1 ', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\r\n        datasets: [\r\n            {\r\n                label: 'Число закончивших проект',\r\n                data: [53, 46, 42, 40, 33, 32, 31, 24, 20, 12, 10, 10],\r\n                backgroundColor: 'rgba(99,138,255,0.91)',\r\n                borderColor: 'rgba(99,120,255,0.15)',\r\n                borderWidth: 1,\r\n            },\r\n            {\r\n                label: 'Число подписавшихся на проект',\r\n                data: [10, 22, 43, 48, 62, 63, 70, 72, 73, 81, 80, 82],\r\n                backgroundColor: 'rgb(255,99,130)',\r\n                borderColor: 'rgba(255,99,99,0.15)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n            container\r\n            spacing={3}\r\n        >\r\n            <Grid\r\n                item\r\n                lg={8}\r\n                xl={9}\r\n                xs={12}\r\n                className={classes.description}\r\n            >\r\n                <Card>\r\n                    <CardContent>\r\n                        <Editor\r\n                            editorState={EditorState.createWithContent(convertFromRaw(JSON.parse(props.description)))}\r\n                            readOnly={true}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n                <Grid\r\n                    container\r\n                    className={classes.chartsGroup}\r\n                    spacing={3}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        lg={6}\r\n                        xl={6}\r\n                        xs={12}\r\n                    >\r\n                        <ChartRadar\r\n                            className={classes.chart1}\r\n                            title='Средний прирост в объемах у пользователей в См'\r\n                            desc={anthropometry}\r\n                            projectId={projectId}\r\n                            userId={userId}\r\n                            data={anthropometryData}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        direction={\"column\"}\r\n                        lg={6}\r\n                        xl={6}\r\n                        xs={12}\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            lg={12}\r\n                            xl={12}\r\n                            xs={12}\r\n                        >\r\n                            <ChartLine\r\n                                className={classes.chart2}\r\n                                title='Динамика веса в Кг'\r\n                                desc='По оси Y - потенциальная динамика вашего веса, по оси X - номер недели на проекте'\r\n                                projectId={projectId}\r\n                                userId={userId}\r\n                                data={dynamicWeightData}\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            lg={12}\r\n                            xl={12}\r\n                            xs={12}\r\n                        >\r\n                            <ChartLine\r\n                                className={classes.chart2}\r\n                                title='Статистика пользователей'\r\n                                desc='По оси Y - число пользователей, по оси X - номер недели на проекте'\r\n                                projectId={projectId}\r\n                                userId={userId}\r\n                                data={completeProjectData}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                lg={4}\r\n                xl={3}\r\n                xs={12}\r\n            >\r\n                <Holder\r\n                    projectId={projectId}\r\n                    userId={userId}\r\n                />\r\n                <Members\r\n                    className={classes.members}\r\n                    members={props.members}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { colors } from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center'\r\n  },\r\n  starIcon: {\r\n    fontSize: 18,\r\n    height: 18,\r\n    width: 18\r\n  },\r\n  starFilledIcon: {\r\n    color: colors.amber[400]\r\n  },\r\n  starBorderIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst ReviewStars = props => {\r\n  const { value, starCount, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const starNodes = [];\r\n\r\n  for (let i = 1; i <= starCount; i++) {\r\n    const key = uuidv4();\r\n\r\n    const starNode =\r\n      i <= value ? (\r\n        <StarIcon\r\n          className={clsx(classes.starIcon, classes.starFilledIcon)}\r\n          key={key}\r\n        />\r\n      ) : (\r\n        <StarBorderIcon\r\n          className={clsx(classes.starIcon, classes.starBorderIcon)}\r\n          key={key}\r\n        />\r\n      );\r\n\r\n    starNodes.push(starNode);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {starNodes}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nReviewStars.defaultProps = {\r\n  importance: 0,\r\n  starCount: 5\r\n};\r\n\r\nexport default ReviewStars;\r\n","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport GenericMoreButton from \"../../../../../../components/GenericMoreButton\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport getInitials from \"../../../../../../utils/getInitials\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport ReviewStars from \"../../../../../../components/ReviewStars\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 700\r\n    },\r\n    nameCell: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: 42,\r\n        width: 42,\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        padding: theme.spacing(1),\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nconst ItemsTable = props => {\r\n\r\n    const { diet, selectedDate, className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    debugger;\r\n\r\n    const handleChangePage = (event, page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    return(\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Card>\r\n                <CardHeader\r\n                    action={<GenericMoreButton />}\r\n                    title=\"Продукты\"\r\n                    subheader={`Список продуктов, которые нужно употребить в пищу ${selectedDate}`}\r\n                >\r\n                </CardHeader>\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                    <PerfectScrollbar>\r\n                        <div className={classes.inner}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Название</TableCell>\r\n                                        <TableCell>Белки</TableCell>\r\n                                        <TableCell>Жиры</TableCell>\r\n                                        <TableCell>Углеводы</TableCell>\r\n                                        <TableCell>Грамм\\мл</TableCell>\r\n                                        <TableCell>кКал</TableCell>\r\n                                        <TableCell>Важность</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {diet.products.slice(0, rowsPerPage).map(product => (\r\n                                        <TableRow\r\n                                            hover\r\n                                            key={product.id}\r\n                                        >\r\n                                            <TableCell>\r\n                                                <div className={classes.nameCell}>\r\n                                                    <Avatar\r\n                                                        className={classes.avatar}\r\n                                                        src={product.avatar}\r\n                                                    >\r\n                                                        {getInitials(product.name)}\r\n                                                    </Avatar>\r\n                                                    <div>\r\n                                                        <Link\r\n                                                            color=\"inherit\"\r\n                                                            component={RouterLink}\r\n                                                            to=\"*\"\r\n                                                            variant=\"h6\"\r\n                                                        >\r\n                                                            {product.name}\r\n                                                        </Link>\r\n                                                        <div>{product.surname}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>{product.proteins}</TableCell>\r\n                                            <TableCell>{product.fats}</TableCell>\r\n                                            <TableCell>{product.carbohydrates}</TableCell>\r\n                                            <TableCell>{product.weight}</TableCell>\r\n                                            <TableCell>{product.calorie}</TableCell>\r\n                                            <TableCell>\r\n                                                <ReviewStars value={product.importance} />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </PerfectScrollbar>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                        <TablePagination\r\n                        component=\"div\"\r\n                        count={diet.products.length}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        page={page}\r\n                        rowsPerPage={rowsPerPage}\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                    />\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ItemsTable;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        position: 'relative'\r\n    }\r\n}));\r\n\r\nconst Chart = props => {\r\n    const {data: dataProp, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const data = {\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [],\r\n                borderWidth: 8,\r\n                borderColor: theme.palette.white,\r\n                hoverBorderColor: theme.palette.white\r\n            }\r\n        ],\r\n        labels: []\r\n    };\r\n\r\n    for (const item of dataProp) {\r\n        data.datasets[0].data.push(item.value);\r\n        data.datasets[0].backgroundColor.push(item.color);\r\n        data.labels.push(item.label);\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        legend: {\r\n            display: false\r\n        },\r\n        layout: {\r\n            padding: 0\r\n        },\r\n        tooltips: {\r\n            enabled: true,\r\n            mode: 'index',\r\n            intersect: false,\r\n            caretSize: 10,\r\n            yPadding: 20,\r\n            xPadding: 20,\r\n            borderWidth: 1,\r\n            borderColor: theme.palette.divider,\r\n            backgroundColor: theme.palette.white,\r\n            titleFontColor: theme.palette.text.primary,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            footerFontColor: theme.palette.text.secondary,\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                    const label = data['labels'][tooltipItem['index']];\r\n                    const value = data['datasets'][0]['data'][tooltipItem['index']];\r\n\r\n                    return `${label}: ${value}%`;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Doughnut\r\n                data={data}\r\n                options={options}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Divider,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport axios from '../../../../../../utils/axios';\r\nimport {Chart} from './components';\r\nimport GenericMoreButton from \"../../../../../../components/GenericMoreButton\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0,\r\n        '&:last-child': {\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    chartContainer: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    chart: {\r\n        height: 281\r\n    },\r\n    statsContainer: {\r\n        display: 'flex'\r\n    },\r\n    statsItem: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(3, 2),\r\n        '&:not(:last-of-type)': {\r\n            borderRight: `1px solid ${theme.palette.divider}`\r\n        }\r\n    }\r\n}));\r\n\r\nconst ProteinsFatsCarbohydrates = props => {\r\n\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n    const [pfc, setPfc] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const fetchPfc = () => {\r\n            axios.get('/api/projects/2').then(response => {\r\n                if (mounted) {\r\n                    setPfc(response.data.project.tasks.diet.pfc);\r\n                }\r\n            });\r\n        };\r\n\r\n        fetchPfc();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardHeader\r\n                action={<GenericMoreButton/>}\r\n                title=\"БЖУ\"\r\n            />\r\n            <Divider/>\r\n            <CardContent className={classes.content}>\r\n                <div className={classes.chartContainer}>\r\n                    <Chart\r\n                        className={classes.chart}\r\n                        data={pfc}\r\n                    />\r\n                </div>\r\n                <Divider/>\r\n                <div className={classes.statsContainer}>\r\n                    {pfc.map(pfc => (\r\n                        <div\r\n                            className={classes.statsItem}\r\n                            key={pfc.id}\r\n                        >\r\n                            <Typography\r\n                                align=\"center\"\r\n                                component=\"h6\"\r\n                                gutterBottom\r\n                                variant=\"overline\"\r\n                            >\r\n                                {pfc.label}\r\n                            </Typography>\r\n                            <Typography\r\n                                align=\"center\"\r\n                                variant=\"h4\"\r\n                            >\r\n                                {pfc.value}%\r\n                            </Typography>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n};\r\n\r\n\r\nexport default ProteinsFatsCarbohydrates;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: 350,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}));\r\n\r\nconst General = () => {\r\n\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div className={classes.title}>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Итого:\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        За период прохождения проекта будет съедено / выпито:\r\n                    </Typography>\r\n                </div>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {bull} 30 кг риса\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {bull} 20 кг куринной грудки\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {bull} 10 кг огурцов\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {bull} 8 кг томатов\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {bull} 9 кг спаржи\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {bull} 70 литров воды\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    Кликни ниже, чтобы подсчитать примерную стоимость продуктов.\r\n                </Typography>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">Рассчитать стоимость продуктов</Button>\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n};\r\n\r\n\r\nexport default General;\r\n","import React from 'react'\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}))\r\n\r\nconst TablePaginationActions = props => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const { count, page, rowsPerPage, onChangePage } = props\r\n\r\n    const handleFirstPageButtonClick = event => {\r\n        onChangePage(event, 0)\r\n    }\r\n\r\n    const handleBackButtonClick = event => {\r\n        onChangePage(event, page - 1)\r\n    }\r\n\r\n    const handleNextButtonClick = event => {\r\n        onChangePage(event, page + 1)\r\n    }\r\n\r\n    const handleLastPageButtonClick = event => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === 'rtl' ? (\r\n                    <KeyboardArrowRight />\r\n                ) : (\r\n                    <KeyboardArrowLeft />\r\n                )}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? (\r\n                    <KeyboardArrowLeft />\r\n                ) : (\r\n                    <KeyboardArrowRight />\r\n                )}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TablePaginationActions\r\n","import React from 'react'\r\n\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n}))\r\n\r\nconst GlobalFilter = ({\r\n                          preGlobalFilteredRows,\r\n                          globalFilter,\r\n                          setGlobalFilter,\r\n                      }) => {\r\n    const classes = useStyles()\r\n    const count = preGlobalFilteredRows.length\r\n\r\n    // Global filter only works with pagination from the first page.\r\n    // This may not be a problem for server side pagination when\r\n    // only the current page is downloaded.\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                value={globalFilter || ''}\r\n                onChange={e => {\r\n                    setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n                }}\r\n                placeholder={`${count} records...`}\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GlobalFilter\r\n","import React from 'react'\r\n\r\nimport AddUserDialog from './AddUserDialog'\r\nimport clsx from 'clsx'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport GlobalFilter from './GlobalFilter'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}))\r\n\r\nconst TableToolbar = props => {\r\n    const classes = useToolbarStyles()\r\n    const {\r\n        numSelected,\r\n        addUserHandler,\r\n        deleteUserHandler,\r\n        preGlobalFilteredRows,\r\n        setGlobalFilter,\r\n        globalFilter,\r\n    } = props\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <AddUserDialog addUserHandler={addUserHandler} />\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n                    Users\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\" onClick={deleteUserHandler}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            )}\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\n\r\nexport default TableToolbar\r\n","import React from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport EnhancedTable from './components/EnhancedTable'\r\nimport makeData from './makeData'\r\n\r\nconst EventTable = () => {\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'First Name',\r\n                accessor: 'firstName',\r\n            },\r\n            {\r\n                Header: 'Last Name',\r\n                accessor: 'lastName',\r\n            },\r\n            {\r\n                Header: 'Age',\r\n                accessor: 'age',\r\n            },\r\n            {\r\n                Header: 'Visits',\r\n                accessor: 'visits',\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'status',\r\n            },\r\n            {\r\n                Header: 'Profile Progress',\r\n                accessor: 'progress',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const [data, setData] = React.useState(React.useMemo(() => makeData(20), []))\r\n    const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n    const updateMyData = (rowIndex, columnId, value) => {\r\n        setSkipPageReset(true)\r\n        setData(old =>\r\n            old.map((row, index) => {\r\n                if (index === rowIndex) {\r\n                    return {\r\n                        ...old[rowIndex],\r\n                        [columnId]: value,\r\n                    }\r\n                }\r\n                return row\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <EnhancedTable\r\n                columns={columns}\r\n                data={data}\r\n                setData={setData}\r\n                updateMyData={updateMyData}\r\n                skipPageReset={skipPageReset}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventTable;\r\n","/* eslint-disable react/display-name */\r\nimport React, {useState, forwardRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Divider,\r\n    FormControlLabel,\r\n    Switch,\r\n    colors\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport EventTable from \"../EventTable\";\r\nimport {generateRandomColor} from \"../../../../../../../utils/generateRandomColor\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addEvent, deleteEvent, updateEvent} from \"../../../../../../../store/actions/eventActions\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        outline: 'none',\r\n        boxShadow: theme.shadows[20],\r\n        minWidth: '30%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            minWidth: '50%',\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            minWidth: '60%',\r\n        },\r\n        maxHeight: '100%',\r\n        overflowY: 'auto',\r\n        maxWidth: '100%'\r\n    },\r\n    field: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    cancelButton: {\r\n\r\n    },\r\n    confirmButton: {\r\n        color: theme.palette.white,\r\n        backgroundColor: colors.green[600],\r\n        '&:hover': {\r\n            backgroundColor: colors.green[900]\r\n        }\r\n    },\r\n    table: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst AddEditEvent = forwardRef((props, ref) => {\r\n    const {\r\n        event,\r\n        onDelete,\r\n        onCancel,\r\n        onAdd,\r\n        onEdit,\r\n        editMode,\r\n        type,\r\n        projectId,\r\n        className,\r\n        ...rest\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const defaultEvent = {\r\n        type: type,\r\n        projectId: projectId,\r\n        title: 'Задание',\r\n        desc: 'Описание задания',\r\n        color: generateRandomColor(),\r\n        allDay: true,\r\n        start: moment().toDate(),\r\n        end: moment().toDate()\r\n    };\r\n\r\n    const [values, setValues] = useState(event || defaultEvent);\r\n\r\n    const mode = editMode ? (event ? 'Изменить' : 'Добавить') : ('Только информация');\r\n\r\n    const handleFieldChange = e => {\r\n        e.persist();\r\n        setValues(values => ({\r\n            ...values,\r\n            [e.target.name]:\r\n                e.target.type === 'checkbox' ? e.target.checked : e.target.value\r\n        }));\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        onDelete && onDelete(event);\r\n        dispatch(deleteEvent(event._id, type))\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        if (!values.title || !values.desc) {\r\n            return;\r\n        }\r\n        dispatch(addEvent({...values, id: uuidv4()}))\r\n        onAdd({...values, id: uuidv4()});\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        if (!values.title || !values.desc) {\r\n            return;\r\n        }\r\n        dispatch(updateEvent({...values, id: uuidv4()}, event._id, type))\r\n        onEdit(values);\r\n    };\r\n\r\n    const titleMode = (mode) => {\r\n        switch (mode) {\r\n            case 'Добавить':\r\n                return 'Добавить задание'\r\n            case 'Изменить':\r\n                return 'Изменить задание'\r\n            default:\r\n                return 'Детали задания'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n            ref={ref}\r\n        >\r\n            <form>\r\n                <CardContent>\r\n                    <Typography\r\n                        align=\"center\"\r\n                        variant=\"overline\"\r\n                    >\r\n                        {titleMode(mode)}\r\n                    </Typography>\r\n                    <TextField\r\n                        className={classes.field}\r\n                        fullWidth\r\n                        label=\"Заголовок\"\r\n                        name=\"title\"\r\n                        onChange={handleFieldChange}\r\n                        value={values.title}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        className={classes.field}\r\n                        fullWidth\r\n                        label=\"Описание\"\r\n                        name=\"desc\"\r\n                        onChange={handleFieldChange}\r\n                        value={values.desc}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    {/*<EventTable*/}\r\n                    {/*    className={classes.table}*/}\r\n                    {/*/>*/}\r\n                    {editMode && (\r\n                    <FormControlLabel\r\n                        className={classes.field}\r\n                        control={\r\n                            <Switch\r\n                                checked={values.allDay}\r\n                                name=\"allDay\"\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        }\r\n                        label=\"Весь день\"\r\n                    />\r\n                    )}\r\n                    <TextField\r\n                        className={classes.field}\r\n                        defaultValue={moment(values.start).format('YYYY-MM-DDThh:mm:ss')}\r\n                        fullWidth\r\n                        label=\"Начальная дата\"\r\n                        name=\"start\"\r\n                        onChange={handleFieldChange}\r\n                        type=\"datetime-local\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        className={classes.field}\r\n                        defaultValue={moment(values.end).format('YYYY-MM-DDThh:mm:ss')}\r\n                        disabled={values.allDay}\r\n                        fullWidth\r\n                        label=\"Конечная дата\"\r\n                        name=\"end\"\r\n                        onChange={handleFieldChange}\r\n                        type=\"datetime-local\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </CardContent>\r\n                <Divider/>\r\n                <CardActions>\r\n                    <Button\r\n                        className={classes.cancelButton}\r\n                        onClick={onCancel}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Выход\r\n                    </Button>\r\n                    {mode === 'Добавить' && (\r\n                        <>\r\n                            <Button\r\n                                className={classes.confirmButton}\r\n                                onClick={handleAdd}\r\n                                variant=\"contained\"\r\n                            >\r\n                                Добавить\r\n                            </Button>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                onClick={handleDelete}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </IconButton>\r\n                        </>\r\n                    )}\r\n                    {mode === 'Изменить' && (\r\n                        <>\r\n                            <Button\r\n                                className={classes.confirmButton}\r\n                                onClick={handleEdit}\r\n                                variant=\"contained\"\r\n                            >\r\n                                Сохранить изменения\r\n                            </Button>\r\n                            <IconButton\r\n                                edge=\"start\"\r\n                                onClick={handleDelete}\r\n                            >\r\n                                <DeleteIcon/>\r\n                            </IconButton>\r\n                        </>\r\n                    )}\r\n                </CardActions>\r\n            </form>\r\n        </Card>\r\n    );\r\n});\r\n\r\n\r\nexport default AddEditEvent;\r\n","import axios from \"axios\";\r\nimport {setHeaders, setProjectHeaders, url} from \"../../api\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const getProjectTrainingsEvents = (currentProjectId) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .get(`${url}/events/${currentProjectId}/trainingsEvents`, setProjectHeaders())\r\n            .then((trainingsEventsList) => {\r\n                dispatch({\r\n                    type: \"CLEAR_EVENTS\"\r\n                })\r\n                dispatch({\r\n                    type: \"GET_TRAININGS_EVENTS\",\r\n                    trainingsEventsList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getProjectDietEvents = (currentProjectId) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .get(`${url}/events/${currentProjectId}/dietEvents`, setProjectHeaders())\r\n            .then((dietEventsList) => {\r\n                dispatch({\r\n                    type: \"CLEAR_EVENTS\"\r\n                })\r\n                dispatch({\r\n                    type: \"GET_DIET_EVENTS\",\r\n                    dietEventsList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n};\r\n\r\nexport const addEvent = (newEvent) => {\r\n    return (dispatch, getState) => {\r\n        const authorId = getState().auth._id;\r\n        axios\r\n            .post(`${url}/events/createEvent`, { ...newEvent, authorId }, setProjectHeaders())\r\n            .then((event) => {\r\n                dispatch({\r\n                    type: \"ADD_EVENT\",\r\n                    event,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateEvent = (updatedEvent, id, type) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .put(`${url}/events/${id}/${type}`, updatedEvent, setProjectHeaders())\r\n            .then((updatedEvent) => {\r\n                dispatch({\r\n                    type: \"UPDATE_EVENT\",\r\n                    updatedEvent,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteEvent = (id, type) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .delete(`${url}/events/${id}/${type}`, setHeaders())\r\n            .then(() => {\r\n                dispatch({\r\n                    type: \"DELETE_EVENT\",\r\n                    id,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Hidden,\r\n    Typography,\r\n    Tooltip,\r\n    ButtonGroup,\r\n    IconButton,\r\n    Button\r\n} from '@material-ui/core';\r\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\r\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\r\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\r\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\r\nimport {ArrowBack, ArrowForward} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    addEvent: {\r\n        [theme.breakpoints.down('xs')]: {},\r\n    },\r\n}));\r\n\r\nconst Toolbar = props => {\r\n    const {\r\n        date,\r\n        view,\r\n        editMode,\r\n        titlePage,\r\n        onDatePrev,\r\n        onDateNext,\r\n        onEventAdd,\r\n        onViewChange,\r\n        onDateToday,\r\n        className,\r\n        ...rest\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const viewOptions = [\r\n        {\r\n            label: 'Месяц',\r\n            value: 'dayGridMonth',\r\n            icon: ViewConfigIcon\r\n        },\r\n        {\r\n            label: 'Неделя',\r\n            value: 'timeGridWeek',\r\n            icon: ViewWeekIcon\r\n        },\r\n        {\r\n            label: 'День',\r\n            value: 'timeGridDay',\r\n            icon: ViewDayIcon\r\n        },\r\n        {\r\n            label: 'Задачи дня',\r\n            value: 'listWeek',\r\n            icon: ViewAgendaIcon\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Grid\r\n                alignItems=\"flex-end\"\r\n                container\r\n                justify=\"space-between\"\r\n                spacing={1}\r\n            >\r\n                <Grid item>\r\n                    {/*<Typography*/}\r\n                    {/*    component=\"h2\"*/}\r\n                    {/*    gutterBottom*/}\r\n                    {/*    variant=\"overline\"*/}\r\n                    {/*>*/}\r\n                    {/*    Календарь задач*/}\r\n                    {/*</Typography>*/}\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"overline\"\r\n                    >\r\n                        {props.editMode\r\n                            ? `${props.titlePage}. Режим редактирования`\r\n                            : `${props.titlePage}. Режим просмотра`\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                {/*<Hidden smDown>*/}\r\n                {/*    {props.editMode && (*/}\r\n                {/*        <Grid item>*/}\r\n                {/*            <Button*/}\r\n                {/*                color=\"primary\"*/}\r\n                {/*                onClick={onEventAdd}*/}\r\n                {/*                variant=\"contained\"*/}\r\n                {/*                className={classes.addEvent}*/}\r\n                {/*            >*/}\r\n                {/*                Добавить событие*/}\r\n                {/*            </Button>*/}\r\n                {/*        </Grid>*/}\r\n                {/*    )}*/}\r\n                {/*</Hidden>*/}\r\n            </Grid>\r\n            <Grid\r\n                alignItems=\"center\"\r\n                container\r\n                justify=\"space-between\"\r\n                spacing={1}\r\n            >\r\n                <Grid item>\r\n                    <ButtonGroup>\r\n                        <Button onClick={onDatePrev}><ArrowBack/></Button>\r\n                        <Button onClick={onDateToday}>Сегодня</Button>\r\n                        <Button onClick={onDateNext}><ArrowForward/></Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Hidden smDown>\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\">\r\n                            {`Дата: ${moment(date).format('MM.DD.YYYY')}`}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {viewOptions.map(viewOption => {\r\n                            const Icon = viewOption.icon;\r\n\r\n                            return (\r\n                                <Tooltip\r\n                                    key={viewOption.value}\r\n                                    title={viewOption.label}\r\n                                >\r\n                                    <IconButton\r\n                                        color={viewOption.value === view ? 'primary' : 'default'}\r\n                                        onClick={() => onViewChange(viewOption.value)}\r\n                                    >\r\n                                        <Icon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Hidden>\r\n                {props.editMode && (\r\n                    <Grid item>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={onEventAdd}\r\n                            variant=\"contained\"\r\n                            className={classes.addEvent}\r\n                        >\r\n                            Добавить событие\r\n                        </Button>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Toolbar;\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport moment from 'moment';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timelinePlugin from '@fullcalendar/timeline';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Modal,\r\n    Card,\r\n    CardContent,\r\n    colors,\r\n    useTheme,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\nimport '@fullcalendar/common/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\nimport '@fullcalendar/list/main.css';\r\n\r\nimport {AddEditEvent, Toolbar} from './components';\r\n\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {generateRandomColor} from \"../../../../../utils/generateRandomColor\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProjectDietEvents, getProjectTrainingsEvents} from \"../../../../../store/actions/eventActions\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n        '& .fc-unthemed td': {\r\n            borderColor: theme.palette.divider\r\n        },\r\n        '& .fc-widget-header': {\r\n            backgroundColor: colors.grey[50]\r\n        },\r\n        '& .fc-axis': {\r\n            ...theme.typography.body2\r\n        },\r\n        '& .fc-list-item-time': {\r\n            ...theme.typography.body2\r\n        },\r\n        '& .fc-list-item-title': {\r\n            ...theme.typography.body1\r\n        },\r\n        '& .fc-list-heading-main': {\r\n            ...theme.typography.h6\r\n        },\r\n        '& .fc-list-heading-alt': {\r\n            ...theme.typography.h6\r\n        },\r\n        '& .fc th': {\r\n            borderColor: theme.palette.divider\r\n        },\r\n        '& .fc-day-header': {\r\n            ...theme.typography.subtitle2,\r\n            fontWeight: 500,\r\n            color: theme.palette.text.secondary,\r\n            padding: theme.spacing(1),\r\n            backgroundColor: colors.grey[50]\r\n        },\r\n        '& .fc-day-top': {\r\n            ...theme.typography.body2\r\n        },\r\n        '& .fc-highlight': {\r\n            backgroundColor: colors.blueGrey[50]\r\n        },\r\n        '& .fc-event': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: theme.palette.primary.contrastText,\r\n            borderWidth: 2,\r\n            opacity: 0.9,\r\n            '& .fc-time': {\r\n                ...theme.typography.h6,\r\n                color: 'inherit'\r\n            },\r\n            '& .fc-title': {\r\n                ...theme.typography.body1,\r\n                color: 'inherit'\r\n            }\r\n        },\r\n        '& .fc-list-empty': {\r\n            ...theme.typography.subtitle1\r\n        }\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing(1),\r\n        borderRadius: '1%',\r\n    }\r\n}));\r\n\r\n\r\nconst ProjectCalendar = props => {\r\n    const {editMode, titlePage, type, projectId} = props\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(type === 'trainings') {\r\n            dispatch(getProjectTrainingsEvents(projectId))\r\n        } else {\r\n            dispatch(getProjectDietEvents(projectId))\r\n        }\r\n    }, [projectId])\r\n\r\n    const eventsList = useSelector(state => state.eventsList)\r\n\r\n    const calendarRef = useRef(null);\r\n    const theme = useTheme();\r\n    const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [view, setView] = useState(mobileDevice ? 'listWeek' : 'dayGridMonth');\r\n    const [date, setDate] = useState(moment().format('DD-MM-YYYY'));\r\n    const [events, setEvents] = useState([...eventsList]);\r\n\r\n    useEffect(() => {\r\n        setEvents(eventsList)\r\n    }, [eventsList])\r\n\r\n    const [eventModal, setEventModal] = useState({\r\n        open: false,\r\n        event: null\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     let mounted = true;\r\n    //\r\n    //     const fetchEvents = () => {\r\n    //         if (mounted) {\r\n    //             axios\r\n    //                 .get('/api/calendar')\r\n    //                 .then(response => setEvents(response.data.events));\r\n    //         }\r\n    //     };\r\n    //\r\n    //     fetchEvents();\r\n    //\r\n    //     return () => {\r\n    //         mounted = false;\r\n    //     };\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const calendarApi = calendarRef.current.getApi();\r\n        const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\r\n\r\n        calendarApi.changeView(newView);\r\n        setView(newView);\r\n    }, [mobileDevice]);\r\n\r\n    const handleEventClick = info => {\r\n        const selected = events.find(event => event.id === info.event.id);\r\n\r\n        setEventModal({\r\n            open: true,\r\n            event: selected\r\n        });\r\n    };\r\n\r\n    const handleEventNew = () => {\r\n        setEventModal({\r\n            open: true,\r\n            event: null\r\n        });\r\n    };\r\n\r\n    const handleEventDelete = event => {\r\n        setEvents(events => events.filter(e => e.id !== event.id));\r\n        setEventModal({\r\n            open: false,\r\n            event: null\r\n        });\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setEventModal({\r\n            open: false,\r\n            event: null\r\n        });\r\n    };\r\n\r\n    const handleEventAdd = event => {\r\n        setEvents(events => [...events, event]);\r\n        setEventModal({\r\n            open: false,\r\n            event: null\r\n        });\r\n    };\r\n\r\n    const handleEventEdit = event => {\r\n        setEvents(events => events.map(e => (e.id === event.id ? event : e)));\r\n        setEventModal({\r\n            open: false,\r\n            event: null\r\n        });\r\n    };\r\n\r\n    const handleDateToday = () => {\r\n        const calendarApi = calendarRef.current.getApi();\r\n\r\n        calendarApi.today();\r\n        setDate(calendarApi.getDate());\r\n    };\r\n\r\n    const handleViewChange = view => {\r\n        const calendarApi = calendarRef.current.getApi();\r\n\r\n        calendarApi.changeView(view);\r\n        setView(view);\r\n    };\r\n\r\n    const handleDatePrev = () => {\r\n        const calendarApi = calendarRef.current.getApi();\r\n\r\n        calendarApi.prev();\r\n        setDate(calendarApi.getDate());\r\n    };\r\n\r\n    const handleDateNext = () => {\r\n        const calendarApi = calendarRef.current.getApi();\r\n\r\n        calendarApi.next();\r\n        setDate(calendarApi.getDate());\r\n    };\r\n\r\n    const handleNothing = () => {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n        >\r\n            <Toolbar\r\n                date={date}\r\n                onDateNext={handleDateNext}\r\n                onDatePrev={handleDatePrev}\r\n                onDateToday={handleDateToday}\r\n                onEventAdd={editMode ? handleEventNew : handleNothing}\r\n                onViewChange={handleViewChange}\r\n                view={view}\r\n                editMode={props.editMode}\r\n                titlePage={props.titlePage}\r\n            />\r\n            <Card className={classes.card}>\r\n                {/*<CardContent>Раньше календарь был внутри контента</CardContent>*/}\r\n                <FullCalendar\r\n                    locale={'ru'}\r\n                    schedulerLicenseKey={'GPL-My-Project-Is-Open-Source'}\r\n                    allDayMaintainDuration\r\n                    defaultDate={date}\r\n                    defaultView={view}\r\n                    droppable\r\n                    editable\r\n                    eventClick={handleEventClick}\r\n                    eventResizableFromStart\r\n                    events={events}\r\n                    header={false}\r\n                    headerToolbar={false}\r\n                    height={800}\r\n                    plugins={[\r\n                        dayGridPlugin,\r\n                        timeGridPlugin,\r\n                        interactionPlugin,\r\n                        listPlugin,\r\n                        timelinePlugin\r\n                    ]}\r\n                    ref={calendarRef}\r\n                    rerenderDelay={10}\r\n                    selectable\r\n                    weekends\r\n                />\r\n            </Card>\r\n            <Modal\r\n                onClose={handleModalClose}\r\n                open={eventModal.open}\r\n            >\r\n                <AddEditEvent\r\n                    event={eventModal.event}\r\n                    onAdd={handleEventAdd}\r\n                    onCancel={handleModalClose}\r\n                    onDelete={handleEventDelete}\r\n                    onEdit={handleEventEdit}\r\n                    editMode={editMode}\r\n                    type={type}\r\n                    projectId={projectId}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ProjectCalendar;\r\n\r\n\r\n//{\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Баллон гавна',\r\n//             desc: 'Описание задания',\r\n//             allDay: true,\r\n//             color: colors.green['700'], //generateRandomColor() рандомный цвет? можно как опцию\r\n//             start: moment('2021-07-01').toDate(),\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Моча съела гавно',\r\n//             desc: 'Inform about new contract',\r\n//             allDay: false,\r\n//             color: colors.green['700'],\r\n//             start: moment('2021-07-01 16:55:00').toDate(),\r\n//             end: moment('2021-07-01 17:02:00').toDate()\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Дрисня',\r\n//             desc: 'Discuss about new partnership',\r\n//             allDay: false,\r\n//             color: colors.amber['700'],\r\n//             start: moment('2021-07-03 08:55:00').toDate(),\r\n//             end: moment('2021-07-04 15:02:00').toDate()\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Хочу пиццы',\r\n//             desc: 'Prepare documentation',\r\n//             allDay: true,\r\n//             color: colors.orange['700'],\r\n//             start: moment('2021-07-14 16:55:00').toDate()\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Тест1',\r\n//             desc: 'Meet with team to discuss',\r\n//             allDay: true,\r\n//             color: colors.yellow['700'],\r\n//             start: moment('2021-07-18 07:00:00').toDate()\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Тест2',\r\n//             desc: 'Sorry, John',\r\n//             allDay: false,\r\n//             color: colors.blue['700'],\r\n//             start: moment('2021-07-20 08:55:00').toDate(),\r\n//             end: moment('2021-07-20 09:30:00').toDate()\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             authorId: 'userId',\r\n//             title: 'Саня',\r\n//             desc: 'Discuss about the new project',\r\n//             allDay: true,\r\n//             color: colors.purple['700'],\r\n//             start: moment('2021-07-03 08:00:00').toDate(),\r\n//             end: moment('2021-07-07 08:00:00').toDate()\r\n//         },\r\n//         {\r\n//             id: uuidv4(),\r\n//             type: 'trainings',\r\n//             projectId: 'projectId',\r\n//             userId: 'userId',\r\n//             title: 'Лоликс',\r\n//             desc: 'Get a new quote for the payment processor',\r\n//             allDay: false,\r\n//             color: colors.red['700'],\r\n//             start: moment('2021-07-05 08:00:00').toDate(),\r\n//             end: moment('2021-07-06 09:00:00').toDate()\r\n//         }","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport moment from \"moment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport ItemsTable from \"./components/ItemsTable\";\r\nimport ProteinsFatsCarbohydrates from \"./components/ProteinsFatsCarbohydrates\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport General from \"./components/General\";\r\nimport ProjectCalendar from \"../Calendar/ProjectCalendar\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n}));\r\n\r\nconst Diet = props => {\r\n    const {className, projectId, projectAuthorId, authUserId, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <ProjectCalendar\r\n                titlePage={'Диета'}\r\n                type={'diet'}\r\n                editMode={(projectAuthorId === authUserId)}\r\n                projectId={projectId}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Diet;\r\n\r\n// const {diet, className, ...rest} = props;\r\n//\r\n// const classes = useStyles();\r\n//\r\n// const [selectedDate, setSelectedDate] = React.useState(moment());\r\n//\r\n// const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n// };\r\n// <Grid\r\n//     container\r\n//     justify=\"space-between\"\r\n//     spacing={2}\r\n// >\r\n//     <Grid\r\n//         item\r\n//         direction=\"column\"\r\n//         lg={8}\r\n//         xs={12}\r\n//     >\r\n//         <Typography variant=\"subtitle2\" className={classes.desc}>\r\n//             Здесь можно посмотреть подробную информацию про содержание, стоимость, энергетическую ценность рациона на каждый день диеты.\r\n//         </Typography>\r\n//         <Typography variant=\"subtitle2\" className={classes.desc}>\r\n//             Выберете дату в форме справа для начала.\r\n//         </Typography>\r\n//         {/*<ItemsTable selectedDate={selectedDate} diet={diet}/>*/}\r\n//     </Grid>\r\n//     <Grid\r\n//         className={classes.dates}\r\n//         direction=\"column\"\r\n//         item\r\n//         lg={4}\r\n//         xs={12}\r\n//     >\r\n//         <KeyboardDatePicker\r\n//             margin=\"normal\"\r\n//             id=\"date-picker-dialog\"\r\n//             label=\"Выберете дату\"\r\n//             format=\"dd/MM/yyyy\"\r\n//             value={selectedDate}\r\n//             onChange={handleDateChange}\r\n//             KeyboardButtonProps={{\r\n//                 'aria-label': 'Изменить',\r\n//             }}\r\n//         />\r\n//         <ProteinsFatsCarbohydrates\r\n//             className={classes.pfc}\r\n//         />\r\n//         <General />\r\n//     </Grid>\r\n// </Grid>","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n    slider: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: '0',\r\n    },\r\n    {\r\n        value: 1,\r\n        label: '1',\r\n    },\r\n    {\r\n        value: 2,\r\n        label: '2',\r\n    },\r\n    {\r\n        value: 3,\r\n        label: '3',\r\n    },\r\n    {\r\n        value: 4,\r\n        label: '4',\r\n    },\r\n    {\r\n        value: 5,\r\n        label: '5',\r\n    },\r\n    {\r\n        value: 6,\r\n        label: '6',\r\n    },\r\n    {\r\n        value: 7,\r\n        label: '7',\r\n    },\r\n    {\r\n        value: 8,\r\n        label: '8',\r\n    },\r\n    {\r\n        value: 9,\r\n        label: '9',\r\n    },\r\n    {\r\n        value: 10,\r\n        label: '10',\r\n    },\r\n];\r\n\r\nfunction valuetext(value) {\r\n    return `${value} баллов`;\r\n}\r\n\r\nlet value = 6;\r\n\r\nconst Intensity = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"discrete-slider-always\" gutterBottom>\r\n                Интенсивность\r\n            </Typography>\r\n            <Slider\r\n                className={classes.slider}\r\n                defaultValue={value}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={1}\r\n                marks={marks}\r\n                valueLabelDisplay=\"on\"\r\n                min={0}\r\n                max={10}\r\n                disabled\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Intensity;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Intensity from \"./components/Intensity\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: 350,\r\n    },\r\n    desc: {\r\n        paddingTop: theme.spacing(3)\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n}));\r\n\r\n\r\nconst General = props => {\r\n\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardContent>\r\n                <Intensity/>\r\n                <Typography\r\n                    className={classes.desc}\r\n                    variant=\"subtitle1\"\r\n                >\r\n                    Общий тоннаж: 8970 кг за тренировку.\r\n                </Typography>\r\n                <Typography\r\n                    className={classes.desc}\r\n                    variant=\"subtitle2\"\r\n                >\r\n                    Если вы не смогли полностью выполнить тренировку, то нажмите на кнопку ниже и заполните поля, где вы не сошлись с планом\r\n                </Typography>\r\n                <CardActions>\r\n                    <Button size=\"medium\" color=\"primary\">Изменить тренировочный план</Button>\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n};\r\n\r\n\r\nexport default General;\r\n","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {makeStyles, Typography} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GenericMoreButton from \"../../../../../components/GenericMoreButton\";\r\nimport getInitials from \"../../../../../utils/getInitials\";\r\nimport ReviewStars from \"../../../../../components/ReviewStars\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {TableRowColumn} from \"material-ui\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n        padding: 0\r\n    },\r\n    inner: {\r\n        minWidth: 700\r\n    },\r\n    nameCell: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        height: 42,\r\n        width: 42,\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n        padding: theme.spacing(1),\r\n        justifyContent: 'flex-end'\r\n    },\r\n    nothing: {\r\n        paddingLeft: theme.spacing(3),\r\n        paddingTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst TrainingsTable = props => {\r\n\r\n    const {train, selectedDate, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\r\n    const handleChangePage = (event, page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(event.target.value);\r\n    };\r\n\r\n    debugger;\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Card>\r\n                <CardHeader\r\n                    action={<GenericMoreButton/>}\r\n                    title=\"Упражнения\"\r\n                    subheader={`Список упражнений, которые нужно выполнить за тренировку`}\r\n                >\r\n                </CardHeader>\r\n                <Divider/>\r\n                <CardContent className={classes.content}>\r\n                    {\r\n                        train\r\n                            ? <PerfectScrollbar>\r\n                                <div className={classes.inner}>\r\n                                    <Table size=\"small\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Упражнение</TableCell>\r\n                                                <TableCell>Подходы</TableCell>\r\n                                                <TableCell>Вес(кг)</TableCell>\r\n                                                <TableCell>Повторы</TableCell>\r\n                                                <TableCell>Отдых(сек)</TableCell>\r\n                                                <TableCell>Тоннаж(кг)</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {train.exercises.map(exercise => <TableRow\r\n                                                hover\r\n                                                key={exercise.id}\r\n                                            >\r\n                                                <TableCell>\r\n                                                    <Typography\r\n                                                        variant=\"subtitle1\"\r\n                                                    >\r\n                                                        {exercise.name}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {exercise.sets.map(e => (\r\n                                                        <TableRow>\r\n                                                            <TableCell>\r\n                                                                {e.set}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {exercise.sets.map(e => (\r\n                                                        <TableRow>\r\n                                                            <TableCell>\r\n                                                                {e.weight}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {exercise.sets.map(e => (\r\n                                                        <TableRow>\r\n                                                            <TableCell>\r\n                                                                {e.reps}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {exercise.sets.map(e => (\r\n                                                        <TableRow>\r\n                                                            <TableCell>\r\n                                                                {e.chill}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {exercise.sets.map(e => (\r\n                                                        <TableRow>\r\n                                                            <TableCell>\r\n                                                                {e.tonnage}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableCell>\r\n                                            </TableRow>)}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n                            : <div className={classes.nothing}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                    Здесь пока ничего\r\n                                </Typography>\r\n                            </div>\r\n                    }\r\n                </CardContent>\r\n                {/*<CardActions className={classes.actions}>*/}\r\n                {/*    <TablePagination*/}\r\n                {/*        component=\"div\"*/}\r\n                {/*        count={train.length}*/}\r\n                {/*        onChangePage={handleChangePage}*/}\r\n                {/*        onChangeRowsPerPage={handleChangeRowsPerPage}*/}\r\n                {/*        page={page}*/}\r\n                {/*        rowsPerPage={rowsPerPage}*/}\r\n                {/*        rowsPerPageOptions={[5, 10, 25]}*/}\r\n                {/*    />*/}\r\n                {/*</CardActions>*/}\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default TrainingsTable;","import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid} from '@material-ui/core';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport General from './components/General/General'\r\nimport moment from \"moment\";\r\nimport TrainingsTable from \"./components/TrainingsTable\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    dates: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n    },\r\n    pfc: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    desc: {\r\n        margin: theme.spacing(3)\r\n    },\r\n    intensity: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst Trainings = props => {\r\n    const {train, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [selectedDate, setDate] = useState(moment());\r\n    const [inputValue, setInputValue] = useState(moment().format(\"DD/MM/YYYY\"));\r\n    // const [selectedDate, setSelectedDate] = useState(moment().format(\"DD/MM/YYYY\"));\r\n\r\n    // const handleDateChange = (date) => {\r\n    //     setSelectedDate(date);\r\n    // };\r\n\r\n    // let first = train[0].date;\r\n    // let last = train[train.length - 1].date\r\n\r\n    const onDateChange = (date, value) => {\r\n        setDate(date);\r\n        setInputValue(value);\r\n    };\r\n\r\n    const dateFormatter = str => {\r\n        return str;\r\n    };\r\n\r\n    // let currentTrain = train.find(e => e.date === inputValue);\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <Grid\r\n                container\r\n                justify=\"space-between\"\r\n                spacing={2}\r\n            >\r\n                <Grid\r\n                    item\r\n                    direction=\"column\"\r\n                    lg={8}\r\n                    xs={12}\r\n                >\r\n                    <Typography variant=\"subtitle2\" className={classes.desc}>\r\n                        Здесь можно посмотреть подробную информацию про ваш тренировочный план: упражнения, число подходов, вес снаряда и т.д.\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" className={classes.desc}>\r\n                        Выберете дату в форме справа для начала.\r\n                    </Typography>\r\n                    {/*<TrainingsTable*/}\r\n                    {/*    selectedDate={selectedDate}*/}\r\n                    {/*    train={currentTrain ? currentTrain : null}*/}\r\n                    {/*/>*/}\r\n                </Grid>\r\n                <Grid\r\n                    className={classes.dates}\r\n                    direction=\"column\"\r\n                    item\r\n                    lg={4}\r\n                    xs={12}\r\n                >\r\n                    <KeyboardDatePicker\r\n                        value={selectedDate}\r\n                        format=\"DD/MM/YYYY\"\r\n                        inputValue={inputValue}\r\n                        onChange={onDateChange}\r\n                        rifmFormatter={dateFormatter}\r\n                        // minDate={first.toString()}\r\n                        // maxDate={last.toString()}\r\n                    />\r\n                    <General className={classes.intensity} />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Trainings;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid} from '@material-ui/core';\r\nimport Diet from \"../Diet\";\r\nimport Trainings from \"../Trainings/Trainings\";\r\n\r\n// import {SubscriberCard} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst Tasks = props => {\r\n    const {tasks, className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n            container\r\n            spacing={3}\r\n        >\r\n            {/*{tasks.diet &&*/}\r\n            {/*<Diet diet={tasks.diet}/>*/}\r\n            {/*}*/}\r\n            {/*{tasks.train &&*/}\r\n            {/*<Trainings train={tasks.train}/>*/}\r\n            {/*}*/}\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\nexport default Tasks;\r\n","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ProjectCalendar from \"../Calendar/ProjectCalendar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n}));\r\n\r\n\r\nconst Workouts = props => {\r\n    const {className, projectId, projectAuthorId, authUserId, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <ProjectCalendar\r\n                titlePage={'Тренировки'}\r\n                type={'trainings'}\r\n                projectId={projectId}\r\n                editMode={(projectAuthorId === authUserId)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Workouts;","import React, {useState, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Tabs, Tab, Divider, colors} from '@material-ui/core';\r\n\r\nimport Page from \"../../components/Page\";\r\nimport {Header, Overview, Files, Activities, Tasks, Workouts} from './components';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProjectById} from \"../../store/actions/projectActions\";\r\nimport {getProfileById} from \"../../store/actions/userActions\";\r\nimport {getMembers} from \"../../store/actions/usersListActions\";\r\nimport Diet from \"./components/Diet\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: theme.breakpoints.values.lg,\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    },\r\n    tabs: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    divider: {\r\n        backgroundColor: colors.grey[300]\r\n    },\r\n    alert: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\n\r\nconst ProjectDetails = props => {\r\n    const {match, history} = props;\r\n    const classes = useStyles();\r\n    const {projectId, userId, tab} = match.params;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProjectById(projectId));\r\n    }, [projectId])\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileById(userId));\r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n        dispatch(getMembers(projectId))\r\n    }, [projectId])\r\n\r\n    const project = useSelector(state => state.projectById);\r\n    const author = useSelector(state => state.userById);\r\n    const members = useSelector(state => state.usersList);\r\n    const authUserId = useSelector(state => state.auth._id)\r\n\r\n    const appState = useSelector((state) => state);\r\n    console.log(appState);\r\n\r\n    const handleTabsChange = (event, value) => {\r\n        history.push(value);\r\n    };\r\n\r\n    const tabs = [\r\n        {value: 'overview', label: 'Подробнее про проект'},\r\n        {value: 'workouts', label: 'Тренировки'},\r\n        {value: 'diet', label: 'Диета'},\r\n        // {value: 'tasks', label: 'Задачи проекта'},\r\n        // {value: 'files', label: 'Прикрепленные файлы'},\r\n        {value: 'activity', label: 'Активность проекта'},\r\n    ];\r\n\r\n    if (!tab) {\r\n        return <Redirect to={`/projects/${projectId}/author/${userId}/overview`}/>;\r\n    }\r\n\r\n    if (!tabs.find(t => t.value === tab)) {\r\n        return <Redirect to=\"/errors/error-404\"/>;\r\n    }\r\n\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"Детали проекта\"\r\n        >\r\n            {project.title && author.name ? (\r\n                <Header project={project} author={author}/>\r\n            ) : (\r\n                <div>загрузка...</div>\r\n            )\r\n            }\r\n            <Tabs\r\n                className={classes.tabs}\r\n                onChange={handleTabsChange}\r\n                scrollButtons=\"auto\"\r\n                value={tab}\r\n                variant=\"scrollable\"\r\n            >\r\n                {tabs.map(tab => (\r\n                    <Tab\r\n                        key={tab.value}\r\n                        label={tab.label}\r\n                        value={tab.value}\r\n                    />\r\n                ))}\r\n            </Tabs>\r\n            <Divider className={classes.divider}/>\r\n            {project.title ? (\r\n                <div className={classes.content}>\r\n                    {tab === 'overview' && <Overview\r\n                        projectId={projectId}\r\n                        userId={userId} members={members}\r\n                        description={project.description}\r\n                    />}\r\n                    {tab === 'workouts' && <Workouts\r\n                        projectId={project._id}\r\n                        projectAuthorId={project.author.uid}\r\n                        authUserId={authUserId}\r\n                    />}\r\n                    {tab === 'diet' && <Diet\r\n                        projectId={project._id}\r\n                        projectAuthorId={project.author.uid}\r\n                        authUserId={authUserId}\r\n                    />}\r\n                    {/*{tab === 'tasks' && <Tasks tasks={project.tasks}/>}*/}\r\n                    {/*{tab === 'files' && <Files files={project.files}/>}*/}\r\n                    {tab === 'activity' && <Activities activities={project.activities}/>}\r\n                </div>)\r\n                : (<div>загрузка...</div>)\r\n            }\r\n        </Page>\r\n    );\r\n};\r\n\r\n\r\nexport default ProjectDetails;\r\n","import axios from \"axios\";\r\nimport {setHeaders, url} from \"../../api\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const getProfileById = (id) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .get(`${url}/users/${id}`, setHeaders())\r\n            .then((userById) => {\r\n\r\n                dispatch({\r\n                    type: \"GET_USER_BY_ID\",\r\n                    userById\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport function unfollowUser(authedUser, currentUser) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({type: \"UNFOLLOW_USER\", payload: success});\r\n            return success;\r\n        }\r\n\r\n        function onError(error) {\r\n            console.log(error.response);\r\n\r\n            toast.error(error.response?.data, {\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n        }\r\n\r\n        try {\r\n            const success = await axios.put(`${url}/users/${currentUser}/unfollow`,\r\n                {userId: authedUser}, setHeaders());\r\n            return onSuccess(success);\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport function followUser(authedUser, currentUser) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({type: \"FOLLOW_USER\", payload: success});\r\n            return success;\r\n        }\r\n\r\n        function onError(error) {\r\n            console.log(error.response);\r\n\r\n            toast.error(error.response?.data, {\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n        }\r\n\r\n        try {\r\n            const success = await axios.put(`${url}/users/${currentUser}/follow`,\r\n                {userId: authedUser}, setHeaders());\r\n            return onSuccess(success);\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateUser = (updatedUser, id) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .put(`${url}/users/${id}`, updatedUser, setHeaders())\r\n            .then((user) => {\r\n                dispatch({\r\n                    type: \"UPDATE_USER\",\r\n                    user: user.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                toast.error(error.response?.data, {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                });\r\n            });\r\n    };\r\n};","export default (bytes, decimals = 2) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n};\r\n","import axios from \"axios\";\r\nimport {url} from \"../../api\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport const getFriends = (id) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .get(`${url}/users/friends/${id}`)\r\n            .then((friendsList) => {\r\n                dispatch({\r\n                    type: \"CLEAR_USERSLIST\"\r\n                })\r\n                dispatch({\r\n                    type: \"GET_FRIENDS\",\r\n                    friendsList\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getMembers = (projectId) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .get(`${url}/projects/members/list/${projectId}`)\r\n            .then((membersList) => {\r\n                dispatch({\r\n                    type: \"CLEAR_USERSLIST\"\r\n                })\r\n                dispatch({\r\n                    type: \"GET_MEMBERS\",\r\n                    membersList\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n};\r\n\r\n","import React, {Fragment, useState, useCallback} from 'react';\r\nimport clsx from 'clsx';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {useDropzone} from 'react-dropzone';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Button,\r\n    IconButton,\r\n    Link,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Typography,\r\n    Tooltip,\r\n    colors\r\n} from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport bytesToSize from \"../../utils/bytesToSize\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    dropZone: {\r\n        border: `1px dashed ${theme.palette.divider}`,\r\n        padding: theme.spacing(6),\r\n        outline: 'none',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        '&:hover': {\r\n            backgroundColor: colors.grey[50],\r\n            opacity: 0.5,\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    dragActive: {\r\n        backgroundColor: colors.grey[50],\r\n        opacity: 0.5\r\n    },\r\n    image: {\r\n        width: 130\r\n    },\r\n    info: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    list: {\r\n        maxHeight: 320\r\n    },\r\n    actions: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    }\r\n}));\r\n\r\nconst FilesDropzone = props => {\r\n    const {className, ...rest} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const handleDrop = useCallback(acceptedFiles => {\r\n        setFiles(files => [...files].concat(acceptedFiles));\r\n    }, []);\r\n\r\n    const handleRemoveAll = () => {\r\n        setFiles([]);\r\n    };\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({\r\n        onDrop: handleDrop\r\n    });\r\n\r\n    return (\r\n        <div\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <div\r\n                className={clsx({\r\n                    [classes.dropZone]: true,\r\n                    [classes.dragActive]: isDragActive\r\n                })}\r\n                {...getRootProps()}\r\n            >\r\n                <input {...getInputProps()} />\r\n                <div>\r\n                    <img\r\n                        alt=\"Загрузить файлы\"\r\n                        className={classes.image}\r\n                        src=\"/images/undraw_add_file2_gvbb.svg\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant=\"h3\"\r\n                    >\r\n                        Загрузить файлы\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.info}\r\n                        color=\"textSecondary\"\r\n                        variant=\"body1\"\r\n                    >\r\n                        Перетащите файлы сюда или нажмите на <Link underline=\"always\">ссылку</Link>{' '}\r\n                        для загрузки\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            {files.length > 0 && (\r\n                <>\r\n                    <List className={classes.list}>\r\n                        {files.map((file, i) => (\r\n                            <ListItem\r\n                                divider={i < files.length - 1}\r\n                                key={uuidv4()}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <FileCopyIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={file.name}\r\n                                    primaryTypographyProps={{variant: 'h5'}}\r\n                                    secondary={bytesToSize(file.size)}\r\n                                />\r\n                                <Tooltip title=\"More options\">\r\n                                    <IconButton edge=\"end\">\r\n                                        <MoreIcon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <div className={classes.actions}>\r\n                        <Button\r\n                            onClick={handleRemoveAll}\r\n                            size=\"small\"\r\n                        >\r\n                            Remove all\r\n                        </Button>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Upload files\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default FilesDropzone;\r\n"],"sourceRoot":""}